.include "macros.inc"
.file "OSReset.c"

# 0x805BB0C0 - 0x805BB9F0
.text
.balign 4

.fn OSRegisterShutdownFunction, global
/* 805BB0C0 005B6A40  80 AD F3 C0 */	lwz r5, ShutdownFunctionQueue@sda21(r0)
/* 805BB0C4 005B6A44  48 00 00 08 */	b .L_805BB0CC
.L_805BB0C8:
/* 805BB0C8 005B6A48  80 A5 00 08 */	lwz r5, 0x8(r5)
.L_805BB0CC:
/* 805BB0CC 005B6A4C  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BB0D0 005B6A50  41 82 00 14 */	beq .L_805BB0E4
/* 805BB0D4 005B6A54  80 85 00 04 */	lwz r4, 0x4(r5)
/* 805BB0D8 005B6A58  80 03 00 04 */	lwz r0, 0x4(r3)
/* 805BB0DC 005B6A5C  7C 04 00 40 */	cmplw r4, r0
/* 805BB0E0 005B6A60  40 81 FF E8 */	ble .L_805BB0C8
.L_805BB0E4:
/* 805BB0E4 005B6A64  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BB0E8 005B6A68  40 82 00 38 */	bne .L_805BB120
/* 805BB0EC 005B6A6C  38 8D F3 C0 */	li r4, ShutdownFunctionQueue@sda21
/* 805BB0F0 005B6A70  80 84 00 04 */	lwz r4, 0x4(r4)
/* 805BB0F4 005B6A74  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BB0F8 005B6A78  40 82 00 0C */	bne .L_805BB104
/* 805BB0FC 005B6A7C  90 6D F3 C0 */	stw r3, ShutdownFunctionQueue@sda21(r0)
/* 805BB100 005B6A80  48 00 00 08 */	b .L_805BB108
.L_805BB104:
/* 805BB104 005B6A84  90 64 00 08 */	stw r3, 0x8(r4)
.L_805BB108:
/* 805BB108 005B6A88  38 00 00 00 */	li r0, 0x0
/* 805BB10C 005B6A8C  90 83 00 0C */	stw r4, 0xc(r3)
/* 805BB110 005B6A90  38 8D F3 C0 */	li r4, ShutdownFunctionQueue@sda21
/* 805BB114 005B6A94  90 03 00 08 */	stw r0, 0x8(r3)
/* 805BB118 005B6A98  90 64 00 04 */	stw r3, 0x4(r4)
/* 805BB11C 005B6A9C  4E 80 00 20 */	blr
.L_805BB120:
/* 805BB120 005B6AA0  90 A3 00 08 */	stw r5, 0x8(r3)
/* 805BB124 005B6AA4  80 85 00 0C */	lwz r4, 0xc(r5)
/* 805BB128 005B6AA8  90 65 00 0C */	stw r3, 0xc(r5)
/* 805BB12C 005B6AAC  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BB130 005B6AB0  90 83 00 0C */	stw r4, 0xc(r3)
/* 805BB134 005B6AB4  40 82 00 0C */	bne .L_805BB140
/* 805BB138 005B6AB8  90 6D F3 C0 */	stw r3, ShutdownFunctionQueue@sda21(r0)
/* 805BB13C 005B6ABC  4E 80 00 20 */	blr
.L_805BB140:
/* 805BB140 005B6AC0  90 64 00 08 */	stw r3, 0x8(r4)
/* 805BB144 005B6AC4  4E 80 00 20 */	blr
.endfn OSRegisterShutdownFunction

.fn gap_03_805BB148_text, global
.hidden gap_03_805BB148_text
/* 805BB148 005B6AC8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BB14C 005B6ACC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BB148_text

.fn fn_805BB150, global
/* 805BB150 005B6AD0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BB154 005B6AD4  7C 08 02 A6 */	mflr r0
/* 805BB158 005B6AD8  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BB15C 005B6ADC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 805BB160 005B6AE0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 805BB164 005B6AE4  3B C0 00 00 */	li r30, 0x0
/* 805BB168 005B6AE8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 805BB16C 005B6AEC  7C 9D 23 78 */	mr r29, r4
/* 805BB170 005B6AF0  93 81 00 10 */	stw r28, 0x10(r1)
/* 805BB174 005B6AF4  7C 7C 1B 78 */	mr r28, r3
/* 805BB178 005B6AF8  38 60 00 00 */	li r3, 0x0
/* 805BB17C 005B6AFC  83 ED F3 C0 */	lwz r31, ShutdownFunctionQueue@sda21(r0)
/* 805BB180 005B6B00  48 00 00 40 */	b .L_805BB1C0
.L_805BB184:
/* 805BB184 005B6B04  2C 1E 00 00 */	cmpwi r30, 0x0
/* 805BB188 005B6B08  41 82 00 10 */	beq .L_805BB198
/* 805BB18C 005B6B0C  80 1F 00 04 */	lwz r0, 0x4(r31)
/* 805BB190 005B6B10  7C 03 00 40 */	cmplw r3, r0
/* 805BB194 005B6B14  40 82 00 34 */	bne .L_805BB1C8
.L_805BB198:
/* 805BB198 005B6B18  81 9F 00 00 */	lwz r12, 0x0(r31)
/* 805BB19C 005B6B1C  7F 83 E3 78 */	mr r3, r28
/* 805BB1A0 005B6B20  7F A4 EB 78 */	mr r4, r29
/* 805BB1A4 005B6B24  7D 89 03 A6 */	mtctr r12
/* 805BB1A8 005B6B28  4E 80 04 21 */	bctrl
/* 805BB1AC 005B6B2C  7C 60 00 34 */	cntlzw r0, r3
/* 805BB1B0 005B6B30  80 7F 00 04 */	lwz r3, 0x4(r31)
/* 805BB1B4 005B6B34  54 00 D9 7E */	srwi r0, r0, 5
/* 805BB1B8 005B6B38  83 FF 00 08 */	lwz r31, 0x8(r31)
/* 805BB1BC 005B6B3C  7F DE 03 78 */	or r30, r30, r0
.L_805BB1C0:
/* 805BB1C0 005B6B40  2C 1F 00 00 */	cmpwi r31, 0x0
/* 805BB1C4 005B6B44  40 82 FF C0 */	bne .L_805BB184
.L_805BB1C8:
/* 805BB1C8 005B6B48  48 00 0E 49 */	bl __OSSyncSram
/* 805BB1CC 005B6B4C  7C 60 00 34 */	cntlzw r0, r3
/* 805BB1D0 005B6B50  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 805BB1D4 005B6B54  54 00 D9 7E */	srwi r0, r0, 5
/* 805BB1D8 005B6B58  7F DE 03 78 */	or r30, r30, r0
/* 805BB1DC 005B6B5C  7F C0 00 34 */	cntlzw r0, r30
/* 805BB1E0 005B6B60  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 805BB1E4 005B6B64  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 805BB1E8 005B6B68  54 03 D9 7E */	srwi r3, r0, 5
/* 805BB1EC 005B6B6C  83 81 00 10 */	lwz r28, 0x10(r1)
/* 805BB1F0 005B6B70  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BB1F4 005B6B74  7C 08 03 A6 */	mtlr r0
/* 805BB1F8 005B6B78  38 21 00 20 */	addi r1, r1, 0x20
/* 805BB1FC 005B6B7C  4E 80 00 20 */	blr
.endfn fn_805BB150

.fn __OSShutdownDevices, global
/* 805BB200 005B6B80  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BB204 005B6B84  7C 08 02 A6 */	mflr r0
/* 805BB208 005B6B88  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BB20C 005B6B8C  39 61 00 20 */	addi r11, r1, 0x20
/* 805BB210 005B6B90  48 07 2F 55 */	bl _savegpr_27
/* 805BB214 005B6B94  38 03 FF FB */	subi r0, r3, 0x5
/* 805BB218 005B6B98  7C 7F 1B 78 */	mr r31, r3
/* 805BB21C 005B6B9C  28 00 00 01 */	cmplwi r0, 0x1
/* 805BB220 005B6BA0  40 81 00 0C */	ble .L_805BB22C
/* 805BB224 005B6BA4  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB228 005B6BA8  40 82 00 0C */	bne .L_805BB234
.L_805BB22C:
/* 805BB22C 005B6BAC  3B 60 00 00 */	li r27, 0x0
/* 805BB230 005B6BB0  48 00 00 08 */	b .L_805BB238
.L_805BB234:
/* 805BB234 005B6BB4  3B 60 00 01 */	li r27, 0x1
.L_805BB238:
/* 805BB238 005B6BB8  4B FF A0 E9 */	bl __OSStopAudioSystem
/* 805BB23C 005B6BBC  2C 1B 00 00 */	cmpwi r27, 0x0
/* 805BB240 005B6BC0  40 82 00 10 */	bne .L_805BB250
/* 805BB244 005B6BC4  38 60 00 01 */	li r3, 0x1
/* 805BB248 005B6BC8  48 02 C8 A9 */	bl __PADDisableRecalibration
/* 805BB24C 005B6BCC  7C 7C 1B 78 */	mr r28, r3
.L_805BB250:
/* 805BB250 005B6BD0  83 AD F3 C0 */	lwz r29, ShutdownFunctionQueue@sda21(r0)
/* 805BB254 005B6BD4  38 60 00 00 */	li r3, 0x0
/* 805BB258 005B6BD8  3B C0 00 00 */	li r30, 0x0
/* 805BB25C 005B6BDC  48 00 00 40 */	b .L_805BB29C
.L_805BB260:
/* 805BB260 005B6BE0  2C 1E 00 00 */	cmpwi r30, 0x0
/* 805BB264 005B6BE4  41 82 00 10 */	beq .L_805BB274
/* 805BB268 005B6BE8  80 1D 00 04 */	lwz r0, 0x4(r29)
/* 805BB26C 005B6BEC  7C 03 00 40 */	cmplw r3, r0
/* 805BB270 005B6BF0  40 82 00 34 */	bne .L_805BB2A4
.L_805BB274:
/* 805BB274 005B6BF4  81 9D 00 00 */	lwz r12, 0x0(r29)
/* 805BB278 005B6BF8  7F E4 FB 78 */	mr r4, r31
/* 805BB27C 005B6BFC  38 60 00 00 */	li r3, 0x0
/* 805BB280 005B6C00  7D 89 03 A6 */	mtctr r12
/* 805BB284 005B6C04  4E 80 04 21 */	bctrl
/* 805BB288 005B6C08  7C 60 00 34 */	cntlzw r0, r3
/* 805BB28C 005B6C0C  80 7D 00 04 */	lwz r3, 0x4(r29)
/* 805BB290 005B6C10  54 00 D9 7E */	srwi r0, r0, 5
/* 805BB294 005B6C14  83 BD 00 08 */	lwz r29, 0x8(r29)
/* 805BB298 005B6C18  7F DE 03 78 */	or r30, r30, r0
.L_805BB29C:
/* 805BB29C 005B6C1C  2C 1D 00 00 */	cmpwi r29, 0x0
/* 805BB2A0 005B6C20  40 82 FF C0 */	bne .L_805BB260
.L_805BB2A4:
/* 805BB2A4 005B6C24  48 00 0D 6D */	bl __OSSyncSram
/* 805BB2A8 005B6C28  7C 60 00 34 */	cntlzw r0, r3
/* 805BB2AC 005B6C2C  54 00 D9 7E */	srwi r0, r0, 5
/* 805BB2B0 005B6C30  7F DE 03 79 */	or. r30, r30, r0
/* 805BB2B4 005B6C34  40 82 FF 9C */	bne .L_805BB250
.L_805BB2B8:
/* 805BB2B8 005B6C38  48 00 0D 59 */	bl __OSSyncSram
/* 805BB2BC 005B6C3C  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB2C0 005B6C40  41 82 FF F8 */	beq .L_805BB2B8
/* 805BB2C4 005B6C44  4B FF E7 0D */	bl OSDisableInterrupts
/* 805BB2C8 005B6C48  83 CD F3 C0 */	lwz r30, ShutdownFunctionQueue@sda21(r0)
/* 805BB2CC 005B6C4C  38 60 00 00 */	li r3, 0x0
/* 805BB2D0 005B6C50  3B A0 00 00 */	li r29, 0x0
/* 805BB2D4 005B6C54  48 00 00 40 */	b .L_805BB314
.L_805BB2D8:
/* 805BB2D8 005B6C58  2C 1D 00 00 */	cmpwi r29, 0x0
/* 805BB2DC 005B6C5C  41 82 00 10 */	beq .L_805BB2EC
/* 805BB2E0 005B6C60  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 805BB2E4 005B6C64  7C 03 00 40 */	cmplw r3, r0
/* 805BB2E8 005B6C68  40 82 00 34 */	bne .L_805BB31C
.L_805BB2EC:
/* 805BB2EC 005B6C6C  81 9E 00 00 */	lwz r12, 0x0(r30)
/* 805BB2F0 005B6C70  7F E4 FB 78 */	mr r4, r31
/* 805BB2F4 005B6C74  38 60 00 01 */	li r3, 0x1
/* 805BB2F8 005B6C78  7D 89 03 A6 */	mtctr r12
/* 805BB2FC 005B6C7C  4E 80 04 21 */	bctrl
/* 805BB300 005B6C80  7C 60 00 34 */	cntlzw r0, r3
/* 805BB304 005B6C84  80 7E 00 04 */	lwz r3, 0x4(r30)
/* 805BB308 005B6C88  54 00 D9 7E */	srwi r0, r0, 5
/* 805BB30C 005B6C8C  83 DE 00 08 */	lwz r30, 0x8(r30)
/* 805BB310 005B6C90  7F BD 03 78 */	or r29, r29, r0
.L_805BB314:
/* 805BB314 005B6C94  2C 1E 00 00 */	cmpwi r30, 0x0
/* 805BB318 005B6C98  40 82 FF C0 */	bne .L_805BB2D8
.L_805BB31C:
/* 805BB31C 005B6C9C  48 00 0C F5 */	bl __OSSyncSram
/* 805BB320 005B6CA0  4B FF A2 81 */	bl LCDisable
/* 805BB324 005B6CA4  2C 1B 00 00 */	cmpwi r27, 0x0
/* 805BB328 005B6CA8  40 82 00 0C */	bne .L_805BB334
/* 805BB32C 005B6CAC  7F 83 E3 78 */	mr r3, r28
/* 805BB330 005B6CB0  48 02 C7 C1 */	bl __PADDisableRecalibration
.L_805BB334:
/* 805BB334 005B6CB4  3C 60 80 00 */	lis r3, 0x8000
/* 805BB338 005B6CB8  80 63 00 DC */	lwz r3, 0xdc(r3)
/* 805BB33C 005B6CBC  48 00 00 24 */	b .L_805BB360
.L_805BB340:
/* 805BB340 005B6CC0  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 805BB344 005B6CC4  83 A3 02 FC */	lwz r29, 0x2fc(r3)
/* 805BB348 005B6CC8  2C 00 00 01 */	cmpwi r0, 0x1
/* 805BB34C 005B6CCC  41 82 00 0C */	beq .L_805BB358
/* 805BB350 005B6CD0  2C 00 00 04 */	cmpwi r0, 0x4
/* 805BB354 005B6CD4  40 82 00 08 */	bne .L_805BB35C
.L_805BB358:
/* 805BB358 005B6CD8  48 00 1D F9 */	bl OSCancelThread
.L_805BB35C:
/* 805BB35C 005B6CDC  7F A3 EB 78 */	mr r3, r29
.L_805BB360:
/* 805BB360 005B6CE0  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB364 005B6CE4  40 82 FF DC */	bne .L_805BB340
/* 805BB368 005B6CE8  39 61 00 20 */	addi r11, r1, 0x20
/* 805BB36C 005B6CEC  48 07 2E 45 */	bl _restgpr_27
/* 805BB370 005B6CF0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BB374 005B6CF4  7C 08 03 A6 */	mtlr r0
/* 805BB378 005B6CF8  38 21 00 20 */	addi r1, r1, 0x20
/* 805BB37C 005B6CFC  4E 80 00 20 */	blr
.endfn __OSShutdownDevices

.fn fn_805BB380, global
/* 805BB380 005B6D00  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 805BB384 005B6D04  7C 08 02 A6 */	mflr r0
/* 805BB388 005B6D08  38 80 00 00 */	li r4, 0x0
/* 805BB38C 005B6D0C  38 A0 00 02 */	li r5, 0x2
/* 805BB390 005B6D10  90 01 00 44 */	stw r0, 0x44(r1)
/* 805BB394 005B6D14  38 61 00 08 */	addi r3, r1, 0x8
/* 805BB398 005B6D18  93 E1 00 3C */	stw r31, 0x3c(r1)
/* 805BB39C 005B6D1C  4B A4 93 79 */	bl memset
/* 805BB3A0 005B6D20  48 02 5A 51 */	bl SCInit
.L_805BB3A4:
/* 805BB3A4 005B6D24  48 02 5A ED */	bl SCCheckStatus
/* 805BB3A8 005B6D28  28 03 00 01 */	cmplwi r3, 0x1
/* 805BB3AC 005B6D2C  41 82 FF F8 */	beq .L_805BB3A4
/* 805BB3B0 005B6D30  38 61 00 08 */	addi r3, r1, 0x8
/* 805BB3B4 005B6D34  48 02 75 0D */	bl fn_805E28C0
/* 805BB3B8 005B6D38  48 00 3C B9 */	bl __OSStopPlayRecord
/* 805BB3BC 005B6D3C  48 00 35 75 */	bl __OSUnRegisterStateEvent
/* 805BB3C0 005B6D40  48 01 B6 21 */	bl __DVDPrepareReset
/* 805BB3C4 005B6D44  38 61 00 18 */	addi r3, r1, 0x18
/* 805BB3C8 005B6D48  48 00 3F 89 */	bl __OSReadStateFlags
/* 805BB3CC 005B6D4C  8B E1 00 1E */	lbz r31, 0x1e(r1)
/* 805BB3D0 005B6D50  48 01 B1 D1 */	bl __DVDGetCoverStatus
/* 805BB3D4 005B6D54  28 03 00 02 */	cmplwi r3, 0x2
/* 805BB3D8 005B6D58  41 82 00 0C */	beq .L_805BB3E4
/* 805BB3DC 005B6D5C  38 60 00 03 */	li r3, 0x3
/* 805BB3E0 005B6D60  48 00 00 34 */	b .L_805BB414
.L_805BB3E4:
/* 805BB3E4 005B6D64  28 1F 00 01 */	cmplwi r31, 0x1
/* 805BB3E8 005B6D68  40 82 00 28 */	bne .L_805BB410
/* 805BB3EC 005B6D6C  38 61 00 0C */	addi r3, r1, 0xc
/* 805BB3F0 005B6D70  48 00 0E 81 */	bl __OSGetRTCFlags
/* 805BB3F4 005B6D74  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB3F8 005B6D78  41 82 00 18 */	beq .L_805BB410
/* 805BB3FC 005B6D7C  80 01 00 0C */	lwz r0, 0xc(r1)
/* 805BB400 005B6D80  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB404 005B6D84  40 82 00 0C */	bne .L_805BB410
/* 805BB408 005B6D88  38 60 00 01 */	li r3, 0x1
/* 805BB40C 005B6D8C  48 00 00 08 */	b .L_805BB414
.L_805BB410:
/* 805BB410 005B6D90  38 60 00 02 */	li r3, 0x2
.L_805BB414:
/* 805BB414 005B6D94  88 01 00 08 */	lbz r0, 0x8(r1)
/* 805BB418 005B6D98  98 61 00 1E */	stb r3, 0x1e(r1)
/* 805BB41C 005B6D9C  28 00 00 01 */	cmplwi r0, 0x1
/* 805BB420 005B6DA0  40 82 00 10 */	bne .L_805BB430
/* 805BB424 005B6DA4  38 00 00 05 */	li r0, 0x5
/* 805BB428 005B6DA8  98 01 00 1D */	stb r0, 0x1d(r1)
/* 805BB42C 005B6DAC  48 00 00 0C */	b .L_805BB438
.L_805BB430:
/* 805BB430 005B6DB0  38 00 00 01 */	li r0, 0x1
/* 805BB434 005B6DB4  98 01 00 1D */	stb r0, 0x1d(r1)
.L_805BB438:
/* 805BB438 005B6DB8  48 00 0F 59 */	bl __OSClearRTCFlags
/* 805BB43C 005B6DBC  38 61 00 18 */	addi r3, r1, 0x18
/* 805BB440 005B6DC0  48 00 3E 21 */	bl __OSWriteStateFlags
/* 805BB444 005B6DC4  38 61 00 10 */	addi r3, r1, 0x10
/* 805BB448 005B6DC8  4B FF 79 99 */	bl __OSGetIOSRev
/* 805BB44C 005B6DCC  88 01 00 08 */	lbz r0, 0x8(r1)
/* 805BB450 005B6DD0  28 00 00 01 */	cmplwi r0, 0x1
/* 805BB454 005B6DD4  40 82 00 24 */	bne .L_805BB478
/* 805BB458 005B6DD8  38 00 00 01 */	li r0, 0x1
/* 805BB45C 005B6DDC  90 0D F3 BC */	stw r0, lbl_807D66DC@sda21(r0)
/* 805BB460 005B6DE0  48 00 13 D1 */	bl OSDisableScheduler
/* 805BB464 005B6DE4  38 60 00 05 */	li r3, 0x5
/* 805BB468 005B6DE8  4B FF FD 99 */	bl __OSShutdownDevices
/* 805BB46C 005B6DEC  48 00 14 05 */	bl OSEnableScheduler
/* 805BB470 005B6DF0  4B FF C2 31 */	bl __OSLaunchMenu
/* 805BB474 005B6DF4  48 00 00 14 */	b .L_805BB488
.L_805BB478:
/* 805BB478 005B6DF8  48 00 13 B9 */	bl OSDisableScheduler
/* 805BB47C 005B6DFC  38 60 00 02 */	li r3, 0x2
/* 805BB480 005B6E00  4B FF FD 81 */	bl __OSShutdownDevices
/* 805BB484 005B6E04  48 00 32 6D */	bl fn_805BE6F0
.L_805BB488:
/* 805BB488 005B6E08  80 01 00 44 */	lwz r0, 0x44(r1)
/* 805BB48C 005B6E0C  83 E1 00 3C */	lwz r31, 0x3c(r1)
/* 805BB490 005B6E10  7C 08 03 A6 */	mtlr r0
/* 805BB494 005B6E14  38 21 00 40 */	addi r1, r1, 0x40
/* 805BB498 005B6E18  4E 80 00 20 */	blr
.endfn fn_805BB380

.fn gap_03_805BB49C_text, global
.hidden gap_03_805BB49C_text
/* 805BB49C 005B6E1C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BB49C_text

.fn fn_805BB4A0, global
/* 805BB4A0 005B6E20  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BB4A4 005B6E24  7C 08 02 A6 */	mflr r0
/* 805BB4A8 005B6E28  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BB4AC 005B6E2C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BB4B0 005B6E30  93 C1 00 08 */	stw r30, 0x8(r1)
/* 805BB4B4 005B6E34  7C 7E 1B 78 */	mr r30, r3
/* 805BB4B8 005B6E38  4B FF 8C B9 */	bl fn_805B4170
/* 805BB4BC 005B6E3C  7C 7F 1B 78 */	mr r31, r3
/* 805BB4C0 005B6E40  48 00 3B B1 */	bl __OSStopPlayRecord
/* 805BB4C4 005B6E44  48 00 34 6D */	bl __OSUnRegisterStateEvent
/* 805BB4C8 005B6E48  57 E0 06 3E */	clrlwi r0, r31, 24
/* 805BB4CC 005B6E4C  28 00 00 81 */	cmplwi r0, 0x81
/* 805BB4D0 005B6E50  40 82 00 20 */	bne .L_805BB4F0
/* 805BB4D4 005B6E54  48 00 13 5D */	bl OSDisableScheduler
/* 805BB4D8 005B6E58  38 60 00 04 */	li r3, 0x4
/* 805BB4DC 005B6E5C  4B FF FD 25 */	bl __OSShutdownDevices
/* 805BB4E0 005B6E60  48 00 13 91 */	bl OSEnableScheduler
/* 805BB4E4 005B6E64  7F C3 F3 78 */	mr r3, r30
/* 805BB4E8 005B6E68  48 00 4B 89 */	bl fn_805C0070
/* 805BB4EC 005B6E6C  48 00 00 28 */	b .L_805BB514
.L_805BB4F0:
/* 805BB4F0 005B6E70  28 00 00 80 */	cmplwi r0, 0x80
/* 805BB4F4 005B6E74  40 82 00 20 */	bne .L_805BB514
/* 805BB4F8 005B6E78  48 00 13 39 */	bl OSDisableScheduler
/* 805BB4FC 005B6E7C  38 60 00 04 */	li r3, 0x4
/* 805BB500 005B6E80  4B FF FD 01 */	bl __OSShutdownDevices
/* 805BB504 005B6E84  48 00 13 6D */	bl OSEnableScheduler
/* 805BB508 005B6E88  80 8D F3 B8 */	lwz r4, lbl_807D66D8@sda21(r0)
/* 805BB50C 005B6E8C  7F C3 F3 78 */	mr r3, r30
/* 805BB510 005B6E90  4B FF FB 21 */	bl fn_805BB030
.L_805BB514:
/* 805BB514 005B6E94  48 00 13 1D */	bl OSDisableScheduler
/* 805BB518 005B6E98  38 60 00 01 */	li r3, 0x1
/* 805BB51C 005B6E9C  4B FF FC E5 */	bl __OSShutdownDevices
/* 805BB520 005B6EA0  80 0D F3 04 */	lwz r0, __OSInNandBoot@sda21(r0)
/* 805BB524 005B6EA4  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB528 005B6EA8  40 82 00 10 */	bne .L_805BB538
/* 805BB52C 005B6EAC  80 0D F3 74 */	lwz r0, __OSInReboot@sda21(r0)
/* 805BB530 005B6EB0  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB534 005B6EB4  41 82 00 08 */	beq .L_805BB53C
.L_805BB538:
/* 805BB538 005B6EB8  48 00 30 99 */	bl __OSInitSTM
.L_805BB53C:
/* 805BB53C 005B6EBC  48 00 32 35 */	bl __OSHotReset
/* 805BB540 005B6EC0  3C 60 80 71 */	lis r3, "@2083"@ha
/* 805BB544 005B6EC4  3C A0 80 71 */	lis r5, lbl_8070E10C@ha
/* 805BB548 005B6EC8  38 63 E1 00 */	addi r3, r3, "@2083"@l
/* 805BB54C 005B6ECC  38 80 04 0A */	li r4, 0x40a
/* 805BB550 005B6ED0  38 A5 E1 0C */	addi r5, r5, lbl_8070E10C@l
/* 805BB554 005B6ED4  4C C6 31 82 */	crclr cr1eq
/* 805BB558 005B6ED8  4B FF AD 49 */	bl OSPanic
/* 805BB55C 005B6EDC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BB560 005B6EE0  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BB564 005B6EE4  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 805BB568 005B6EE8  7C 08 03 A6 */	mtlr r0
/* 805BB56C 005B6EEC  38 21 00 10 */	addi r1, r1, 0x10
/* 805BB570 005B6EF0  4E 80 00 20 */	blr
.endfn fn_805BB4A0

.fn gap_03_805BB574_text, global
.hidden gap_03_805BB574_text
/* 805BB574 005B6EF4  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BB578 005B6EF8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BB57C 005B6EFC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BB574_text

.fn __OSReturnToMenu, local
/* 805BB580 005B6F00  94 21 FF 70 */	stwu r1, -0x90(r1)
/* 805BB584 005B6F04  7C 08 02 A6 */	mflr r0
/* 805BB588 005B6F08  90 01 00 94 */	stw r0, 0x94(r1)
/* 805BB58C 005B6F0C  93 E1 00 8C */	stw r31, 0x8c(r1)
/* 805BB590 005B6F10  93 C1 00 88 */	stw r30, 0x88(r1)
/* 805BB594 005B6F14  3F C0 80 71 */	lis r30, "@2083"@ha
/* 805BB598 005B6F18  3B DE E1 00 */	addi r30, r30, "@2083"@l
/* 805BB59C 005B6F1C  93 A1 00 84 */	stw r29, 0x84(r1)
/* 805BB5A0 005B6F20  7C 7D 1B 78 */	mr r29, r3
/* 805BB5A4 005B6F24  48 00 3A CD */	bl __OSStopPlayRecord
/* 805BB5A8 005B6F28  48 00 33 89 */	bl __OSUnRegisterStateEvent
/* 805BB5AC 005B6F2C  48 01 B4 35 */	bl __DVDPrepareReset
/* 805BB5B0 005B6F30  38 61 00 58 */	addi r3, r1, 0x58
/* 805BB5B4 005B6F34  48 00 3D 9D */	bl __OSReadStateFlags
/* 805BB5B8 005B6F38  8B E1 00 5E */	lbz r31, 0x5e(r1)
/* 805BB5BC 005B6F3C  48 01 AF E5 */	bl __DVDGetCoverStatus
/* 805BB5C0 005B6F40  28 03 00 02 */	cmplwi r3, 0x2
/* 805BB5C4 005B6F44  41 82 00 0C */	beq .L_805BB5D0
/* 805BB5C8 005B6F48  38 00 00 03 */	li r0, 0x3
/* 805BB5CC 005B6F4C  48 00 00 34 */	b .L_805BB600
.L_805BB5D0:
/* 805BB5D0 005B6F50  28 1F 00 01 */	cmplwi r31, 0x1
/* 805BB5D4 005B6F54  40 82 00 28 */	bne .L_805BB5FC
/* 805BB5D8 005B6F58  38 61 00 08 */	addi r3, r1, 0x8
/* 805BB5DC 005B6F5C  48 00 0C 95 */	bl __OSGetRTCFlags
/* 805BB5E0 005B6F60  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB5E4 005B6F64  41 82 00 18 */	beq .L_805BB5FC
/* 805BB5E8 005B6F68  80 01 00 08 */	lwz r0, 0x8(r1)
/* 805BB5EC 005B6F6C  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB5F0 005B6F70  40 82 00 0C */	bne .L_805BB5FC
/* 805BB5F4 005B6F74  38 00 00 01 */	li r0, 0x1
/* 805BB5F8 005B6F78  48 00 00 08 */	b .L_805BB600
.L_805BB5FC:
/* 805BB5FC 005B6F7C  38 00 00 02 */	li r0, 0x2
.L_805BB600:
/* 805BB600 005B6F80  3B E0 00 03 */	li r31, 0x3
/* 805BB604 005B6F84  98 01 00 5E */	stb r0, 0x5e(r1)
/* 805BB608 005B6F88  9B E1 00 5D */	stb r31, 0x5d(r1)
/* 805BB60C 005B6F8C  9B A1 00 5F */	stb r29, 0x5f(r1)
/* 805BB610 005B6F90  48 00 0D 81 */	bl __OSClearRTCFlags
/* 805BB614 005B6F94  38 61 00 58 */	addi r3, r1, 0x58
/* 805BB618 005B6F98  48 00 3C 49 */	bl __OSWriteStateFlags
/* 805BB61C 005B6F9C  3C 60 81 28 */	lis r3, 0x8128
/* 805BB620 005B6FA0  4B FF 98 C1 */	bl OSSetArenaLo
/* 805BB624 005B6FA4  3C 60 81 2F */	lis r3, 0x812f
/* 805BB628 005B6FA8  4B FF 98 89 */	bl OSSetArenaHi
/* 805BB62C 005B6FAC  48 02 82 75 */	bl ESP_InitLib
/* 805BB630 005B6FB0  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB634 005B6FB4  41 82 00 78 */	beq .L_805BB6AC
/* 805BB638 005B6FB8  38 61 00 38 */	addi r3, r1, 0x38
/* 805BB63C 005B6FBC  48 00 3D 15 */	bl __OSReadStateFlags
/* 805BB640 005B6FC0  38 00 00 02 */	li r0, 0x2
/* 805BB644 005B6FC4  98 01 00 3E */	stb r0, 0x3e(r1)
/* 805BB648 005B6FC8  9B E1 00 3D */	stb r31, 0x3d(r1)
/* 805BB64C 005B6FCC  48 00 0D 45 */	bl __OSClearRTCFlags
/* 805BB650 005B6FD0  38 61 00 38 */	addi r3, r1, 0x38
/* 805BB654 005B6FD4  48 00 3C 0D */	bl __OSWriteStateFlags
/* 805BB658 005B6FD8  4B FF C0 49 */	bl __OSLaunchMenu
/* 805BB65C 005B6FDC  48 00 11 D5 */	bl OSDisableScheduler
/* 805BB660 005B6FE0  48 00 C1 A1 */	bl __VISetRGBModeImm
/* 805BB664 005B6FE4  80 0D F3 04 */	lwz r0, __OSInNandBoot@sda21(r0)
/* 805BB668 005B6FE8  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB66C 005B6FEC  40 82 00 10 */	bne .L_805BB67C
/* 805BB670 005B6FF0  80 0D F3 74 */	lwz r0, __OSInReboot@sda21(r0)
/* 805BB674 005B6FF4  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB678 005B6FF8  41 82 00 08 */	beq .L_805BB680
.L_805BB67C:
/* 805BB67C 005B6FFC  48 00 2F 55 */	bl __OSInitSTM
.L_805BB680:
/* 805BB680 005B7000  48 00 30 F1 */	bl __OSHotReset
/* 805BB684 005B7004  38 7E 00 00 */	addi r3, r30, 0x0
/* 805BB688 005B7008  38 BE 00 0C */	addi r5, r30, 0xc
/* 805BB68C 005B700C  38 80 04 0A */	li r4, 0x40a
/* 805BB690 005B7010  4C C6 31 82 */	crclr cr1eq
/* 805BB694 005B7014  4B FF AC 0D */	bl OSPanic
/* 805BB698 005B7018  38 7E 00 00 */	addi r3, r30, 0x0
/* 805BB69C 005B701C  38 BE 00 38 */	addi r5, r30, 0x38
/* 805BB6A0 005B7020  38 80 03 F2 */	li r4, 0x3f2
/* 805BB6A4 005B7024  4C C6 31 82 */	crclr cr1eq
/* 805BB6A8 005B7028  4B FF AB F9 */	bl OSPanic
.L_805BB6AC:
/* 805BB6AC 005B702C  38 60 00 E0 */	li r3, 0xe0
/* 805BB6B0 005B7030  38 80 00 20 */	li r4, 0x20
/* 805BB6B4 005B7034  4B FF 98 3D */	bl OSAllocFromMEM1ArenaLo
/* 805BB6B8 005B7038  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB6BC 005B703C  7C 7F 1B 78 */	mr r31, r3
/* 805BB6C0 005B7040  40 82 00 7C */	bne .L_805BB73C
/* 805BB6C4 005B7044  38 61 00 18 */	addi r3, r1, 0x18
/* 805BB6C8 005B7048  48 00 3C 89 */	bl __OSReadStateFlags
/* 805BB6CC 005B704C  38 60 00 02 */	li r3, 0x2
/* 805BB6D0 005B7050  38 00 00 03 */	li r0, 0x3
/* 805BB6D4 005B7054  98 61 00 1E */	stb r3, 0x1e(r1)
/* 805BB6D8 005B7058  98 01 00 1D */	stb r0, 0x1d(r1)
/* 805BB6DC 005B705C  48 00 0C B5 */	bl __OSClearRTCFlags
/* 805BB6E0 005B7060  38 61 00 18 */	addi r3, r1, 0x18
/* 805BB6E4 005B7064  48 00 3B 7D */	bl __OSWriteStateFlags
/* 805BB6E8 005B7068  4B FF BF B9 */	bl __OSLaunchMenu
/* 805BB6EC 005B706C  48 00 11 45 */	bl OSDisableScheduler
/* 805BB6F0 005B7070  48 00 C1 11 */	bl __VISetRGBModeImm
/* 805BB6F4 005B7074  80 0D F3 04 */	lwz r0, __OSInNandBoot@sda21(r0)
/* 805BB6F8 005B7078  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB6FC 005B707C  40 82 00 10 */	bne .L_805BB70C
/* 805BB700 005B7080  80 0D F3 74 */	lwz r0, __OSInReboot@sda21(r0)
/* 805BB704 005B7084  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB708 005B7088  41 82 00 08 */	beq .L_805BB710
.L_805BB70C:
/* 805BB70C 005B708C  48 00 2E C5 */	bl __OSInitSTM
.L_805BB710:
/* 805BB710 005B7090  48 00 30 61 */	bl __OSHotReset
/* 805BB714 005B7094  38 7E 00 00 */	addi r3, r30, 0x0
/* 805BB718 005B7098  38 BE 00 0C */	addi r5, r30, 0xc
/* 805BB71C 005B709C  38 80 04 0A */	li r4, 0x40a
/* 805BB720 005B70A0  4C C6 31 82 */	crclr cr1eq
/* 805BB724 005B70A4  4B FF AB 7D */	bl OSPanic
/* 805BB728 005B70A8  38 7E 00 00 */	addi r3, r30, 0x0
/* 805BB72C 005B70AC  38 BE 00 38 */	addi r5, r30, 0x38
/* 805BB730 005B70B0  38 80 03 F2 */	li r4, 0x3f2
/* 805BB734 005B70B4  4C C6 31 82 */	crclr cr1eq
/* 805BB738 005B70B8  4B FF AB 69 */	bl OSPanic
.L_805BB73C:
/* 805BB73C 005B70BC  7F E3 FB 78 */	mr r3, r31
/* 805BB740 005B70C0  38 80 00 00 */	li r4, 0x0
/* 805BB744 005B70C4  38 A0 00 E0 */	li r5, 0xe0
/* 805BB748 005B70C8  4B A4 8F CD */	bl memset
/* 805BB74C 005B70CC  7F E4 FB 78 */	mr r4, r31
/* 805BB750 005B70D0  38 60 00 00 */	li r3, 0x0
/* 805BB754 005B70D4  48 02 83 BD */	bl ESP_DiGetTicketView
/* 805BB758 005B70D8  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB75C 005B70DC  40 82 00 40 */	bne .L_805BB79C
/* 805BB760 005B70E0  48 00 3F F1 */	bl OSPlayTimeIsLimited
/* 805BB764 005B70E4  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BB768 005B70E8  41 82 00 34 */	beq .L_805BB79C
/* 805BB76C 005B70EC  38 60 00 00 */	li r3, 0x0
/* 805BB770 005B70F0  38 00 FF FF */	li r0, -0x1
/* 805BB774 005B70F4  90 61 00 10 */	stw r3, 0x10(r1)
/* 805BB778 005B70F8  7F E3 FB 78 */	mr r3, r31
/* 805BB77C 005B70FC  38 81 00 10 */	addi r4, r1, 0x10
/* 805BB780 005B7100  38 A1 00 0C */	addi r5, r1, 0xc
/* 805BB784 005B7104  90 01 00 0C */	stw r0, 0xc(r1)
/* 805BB788 005B7108  48 00 44 79 */	bl __OSGetPlayTime
/* 805BB78C 005B710C  80 01 00 0C */	lwz r0, 0xc(r1)
/* 805BB790 005B7110  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB794 005B7114  40 82 00 08 */	bne .L_805BB79C
/* 805BB798 005B7118  48 00 42 B9 */	bl __OSWriteExpiredFlagIfSet
.L_805BB79C:
/* 805BB79C 005B711C  48 00 10 95 */	bl OSDisableScheduler
/* 805BB7A0 005B7120  38 60 00 05 */	li r3, 0x5
/* 805BB7A4 005B7124  4B FF FA 5D */	bl __OSShutdownDevices
/* 805BB7A8 005B7128  48 00 10 C9 */	bl OSEnableScheduler
/* 805BB7AC 005B712C  4B FF BE F5 */	bl __OSLaunchMenu
/* 805BB7B0 005B7130  48 00 10 81 */	bl OSDisableScheduler
/* 805BB7B4 005B7134  48 00 C0 4D */	bl __VISetRGBModeImm
/* 805BB7B8 005B7138  80 0D F3 04 */	lwz r0, __OSInNandBoot@sda21(r0)
/* 805BB7BC 005B713C  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB7C0 005B7140  40 82 00 10 */	bne .L_805BB7D0
/* 805BB7C4 005B7144  80 0D F3 74 */	lwz r0, __OSInReboot@sda21(r0)
/* 805BB7C8 005B7148  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB7CC 005B714C  41 82 00 08 */	beq .L_805BB7D4
.L_805BB7D0:
/* 805BB7D0 005B7150  48 00 2E 01 */	bl __OSInitSTM
.L_805BB7D4:
/* 805BB7D4 005B7154  48 00 2F 9D */	bl __OSHotReset
/* 805BB7D8 005B7158  38 7E 00 00 */	addi r3, r30, 0x0
/* 805BB7DC 005B715C  38 BE 00 0C */	addi r5, r30, 0xc
/* 805BB7E0 005B7160  38 80 04 0A */	li r4, 0x40a
/* 805BB7E4 005B7164  4C C6 31 82 */	crclr cr1eq
/* 805BB7E8 005B7168  4B FF AA B9 */	bl OSPanic
/* 805BB7EC 005B716C  80 01 00 94 */	lwz r0, 0x94(r1)
/* 805BB7F0 005B7170  83 E1 00 8C */	lwz r31, 0x8c(r1)
/* 805BB7F4 005B7174  83 C1 00 88 */	lwz r30, 0x88(r1)
/* 805BB7F8 005B7178  83 A1 00 84 */	lwz r29, 0x84(r1)
/* 805BB7FC 005B717C  7C 08 03 A6 */	mtlr r0
/* 805BB800 005B7180  38 21 00 90 */	addi r1, r1, 0x90
/* 805BB804 005B7184  4E 80 00 20 */	blr
.endfn __OSReturnToMenu

.fn gap_03_805BB808_text, global
.hidden gap_03_805BB808_text
/* 805BB808 005B7188  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BB80C 005B718C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BB808_text

.fn OSReturnToMenu, global
/* 805BB810 005B7190  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BB814 005B7194  7C 08 02 A6 */	mflr r0
/* 805BB818 005B7198  38 60 00 00 */	li r3, 0x0
/* 805BB81C 005B719C  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BB820 005B71A0  4B FF FD 61 */	bl __OSReturnToMenu
/* 805BB824 005B71A4  3C 60 80 71 */	lis r3, "@2083"@ha
/* 805BB828 005B71A8  3C A0 80 71 */	lis r5, "@2131"@ha
/* 805BB82C 005B71AC  38 63 E1 00 */	addi r3, r3, "@2083"@l
/* 805BB830 005B71B0  38 80 03 7F */	li r4, 0x37f
/* 805BB834 005B71B4  38 A5 E1 6C */	addi r5, r5, "@2131"@l
/* 805BB838 005B71B8  4C C6 31 82 */	crclr cr1eq
/* 805BB83C 005B71BC  4B FF AA 65 */	bl OSPanic
/* 805BB840 005B71C0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BB844 005B71C4  7C 08 03 A6 */	mtlr r0
/* 805BB848 005B71C8  38 21 00 10 */	addi r1, r1, 0x10
/* 805BB84C 005B71CC  4E 80 00 20 */	blr
.endfn OSReturnToMenu

.fn fn_805BB850, global
/* 805BB850 005B71D0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BB854 005B71D4  7C 08 02 A6 */	mflr r0
/* 805BB858 005B71D8  38 60 00 01 */	li r3, 0x1
/* 805BB85C 005B71DC  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BB860 005B71E0  4B FF FD 21 */	bl __OSReturnToMenu
/* 805BB864 005B71E4  3C 60 80 71 */	lis r3, "@2083"@ha
/* 805BB868 005B71E8  3C A0 80 71 */	lis r5, lbl_8070E19C@ha
/* 805BB86C 005B71EC  38 63 E1 00 */	addi r3, r3, "@2083"@l
/* 805BB870 005B71F0  38 80 03 91 */	li r4, 0x391
/* 805BB874 005B71F4  38 A5 E1 9C */	addi r5, r5, lbl_8070E19C@l
/* 805BB878 005B71F8  4C C6 31 82 */	crclr cr1eq
/* 805BB87C 005B71FC  4B FF AA 25 */	bl OSPanic
/* 805BB880 005B7200  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BB884 005B7204  7C 08 03 A6 */	mtlr r0
/* 805BB888 005B7208  38 21 00 10 */	addi r1, r1, 0x10
/* 805BB88C 005B720C  4E 80 00 20 */	blr
.endfn fn_805BB850

.fn fn_805BB890, global
/* 805BB890 005B7210  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 805BB894 005B7214  7C 08 02 A6 */	mflr r0
/* 805BB898 005B7218  90 01 00 34 */	stw r0, 0x34(r1)
/* 805BB89C 005B721C  38 61 00 08 */	addi r3, r1, 0x8
/* 805BB8A0 005B7220  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 805BB8A4 005B7224  3F E0 80 71 */	lis r31, "@2083"@ha
/* 805BB8A8 005B7228  3B FF E1 00 */	addi r31, r31, "@2083"@l
/* 805BB8AC 005B722C  48 00 3A A5 */	bl __OSReadStateFlags
/* 805BB8B0 005B7230  38 60 00 02 */	li r3, 0x2
/* 805BB8B4 005B7234  38 00 00 03 */	li r0, 0x3
/* 805BB8B8 005B7238  98 61 00 0E */	stb r3, 0xe(r1)
/* 805BB8BC 005B723C  98 01 00 0D */	stb r0, 0xd(r1)
/* 805BB8C0 005B7240  48 00 0A D1 */	bl __OSClearRTCFlags
/* 805BB8C4 005B7244  38 61 00 08 */	addi r3, r1, 0x8
/* 805BB8C8 005B7248  48 00 39 99 */	bl __OSWriteStateFlags
/* 805BB8CC 005B724C  4B FF BD D5 */	bl __OSLaunchMenu
/* 805BB8D0 005B7250  48 00 0F 61 */	bl OSDisableScheduler
/* 805BB8D4 005B7254  48 00 BF 2D */	bl __VISetRGBModeImm
/* 805BB8D8 005B7258  80 0D F3 04 */	lwz r0, __OSInNandBoot@sda21(r0)
/* 805BB8DC 005B725C  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB8E0 005B7260  40 82 00 10 */	bne .L_805BB8F0
/* 805BB8E4 005B7264  80 0D F3 74 */	lwz r0, __OSInReboot@sda21(r0)
/* 805BB8E8 005B7268  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB8EC 005B726C  41 82 00 08 */	beq .L_805BB8F4
.L_805BB8F0:
/* 805BB8F0 005B7270  48 00 2C E1 */	bl __OSInitSTM
.L_805BB8F4:
/* 805BB8F4 005B7274  48 00 2E 7D */	bl __OSHotReset
/* 805BB8F8 005B7278  38 7F 00 00 */	addi r3, r31, 0x0
/* 805BB8FC 005B727C  38 BF 00 0C */	addi r5, r31, 0xc
/* 805BB900 005B7280  38 80 04 0A */	li r4, 0x40a
/* 805BB904 005B7284  4C C6 31 82 */	crclr cr1eq
/* 805BB908 005B7288  4B FF A9 99 */	bl OSPanic
/* 805BB90C 005B728C  38 7F 00 00 */	addi r3, r31, 0x0
/* 805BB910 005B7290  38 BF 00 38 */	addi r5, r31, 0x38
/* 805BB914 005B7294  38 80 03 F2 */	li r4, 0x3f2
/* 805BB918 005B7298  4C C6 31 82 */	crclr cr1eq
/* 805BB91C 005B729C  4B FF A9 85 */	bl OSPanic
/* 805BB920 005B72A0  80 01 00 34 */	lwz r0, 0x34(r1)
/* 805BB924 005B72A4  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 805BB928 005B72A8  7C 08 03 A6 */	mtlr r0
/* 805BB92C 005B72AC  38 21 00 30 */	addi r1, r1, 0x30
/* 805BB930 005B72B0  4E 80 00 20 */	blr
.endfn fn_805BB890

.fn gap_03_805BB934_text, global
.hidden gap_03_805BB934_text
/* 805BB934 005B72B4  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BB938 005B72B8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BB93C 005B72BC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BB934_text

.fn fn_805BB940, global
/* 805BB940 005B72C0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BB944 005B72C4  7C 08 02 A6 */	mflr r0
/* 805BB948 005B72C8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BB94C 005B72CC  80 0D F3 04 */	lwz r0, __OSInNandBoot@sda21(r0)
/* 805BB950 005B72D0  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB954 005B72D4  40 82 00 10 */	bne .L_805BB964
/* 805BB958 005B72D8  80 0D F3 74 */	lwz r0, __OSInReboot@sda21(r0)
/* 805BB95C 005B72DC  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB960 005B72E0  41 82 00 08 */	beq .L_805BB968
.L_805BB964:
/* 805BB964 005B72E4  48 00 2C 6D */	bl __OSInitSTM
.L_805BB968:
/* 805BB968 005B72E8  48 00 2E 09 */	bl __OSHotReset
/* 805BB96C 005B72EC  3C 60 80 71 */	lis r3, "@2083"@ha
/* 805BB970 005B72F0  3C A0 80 71 */	lis r5, lbl_8070E10C@ha
/* 805BB974 005B72F4  38 63 E1 00 */	addi r3, r3, "@2083"@l
/* 805BB978 005B72F8  38 80 04 0A */	li r4, 0x40a
/* 805BB97C 005B72FC  38 A5 E1 0C */	addi r5, r5, lbl_8070E10C@l
/* 805BB980 005B7300  4C C6 31 82 */	crclr cr1eq
/* 805BB984 005B7304  4B FF A9 1D */	bl OSPanic
/* 805BB988 005B7308  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BB98C 005B730C  7C 08 03 A6 */	mtlr r0
/* 805BB990 005B7310  38 21 00 10 */	addi r1, r1, 0x10
/* 805BB994 005B7314  4E 80 00 20 */	blr
.endfn fn_805BB940

.fn gap_03_805BB998_text, global
.hidden gap_03_805BB998_text
/* 805BB998 005B7318  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BB99C 005B731C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BB998_text

.fn OSGetResetCode, global
/* 805BB9A0 005B7320  3C 60 80 78 */	lis r3, __OSRebootParams@ha
/* 805BB9A4 005B7324  80 03 E4 C0 */	lwz r0, __OSRebootParams@l(r3)
/* 805BB9A8 005B7328  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BB9AC 005B732C  41 82 00 14 */	beq .L_805BB9C0
/* 805BB9B0 005B7330  38 63 E4 C0 */	addi r3, r3, __OSRebootParams@l
/* 805BB9B4 005B7334  80 03 00 04 */	lwz r0, 0x4(r3)
/* 805BB9B8 005B7338  64 03 80 00 */	oris r3, r0, 0x8000
/* 805BB9BC 005B733C  4E 80 00 20 */	blr
.L_805BB9C0:
/* 805BB9C0 005B7340  3C 60 CC 00 */	lis r3, 0xcc00
/* 805BB9C4 005B7344  80 03 30 24 */	lwz r0, 0x3024(r3)
/* 805BB9C8 005B7348  54 03 E8 FE */	srwi r3, r0, 3
/* 805BB9CC 005B734C  4E 80 00 20 */	blr
.endfn OSGetResetCode

.fn OSResetSystem, global
/* 805BB9D0 005B7350  3C 60 80 71 */	lis r3, "@2083"@ha
/* 805BB9D4 005B7354  3C A0 80 71 */	lis r5, "@2163"@ha
/* 805BB9D8 005B7358  38 63 E1 00 */	addi r3, r3, "@2083"@l
/* 805BB9DC 005B735C  38 80 04 A1 */	li r4, 0x4a1
/* 805BB9E0 005B7360  38 A5 E2 EC */	addi r5, r5, "@2163"@l
/* 805BB9E4 005B7364  4C C6 31 82 */	crclr cr1eq
/* 805BB9E8 005B7368  4B FF A8 B8 */	b OSPanic
.endfn OSResetSystem

.fn gap_03_805BB9EC_text, global
.hidden gap_03_805BB9EC_text
/* 805BB9EC 005B736C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BB9EC_text

# 0x8070E100 - 0x8070E368
.data
.balign 8

.obj "@2083", local
	.string "OSReset.c"
.endobj "@2083"

.obj gap_07_8070E10A_data, global
.hidden gap_07_8070E10A_data
	.2byte 0x0000
.endobj gap_07_8070E10A_data

.obj lbl_8070E10C, global
	.4byte 0x5F5F4F53
	.4byte 0x486F7452
	.4byte 0x65736574
	.4byte 0x28293A20
	.4byte 0x46616C69
	.4byte 0x65642074
	.4byte 0x6F207265
	.4byte 0x73657420
	.4byte 0x73797374
	.4byte 0x656D2E0A
	.4byte 0x00000000
	.4byte 0x5F5F4F53
	.4byte 0x52657475
	.4byte 0x726E546F
	.4byte 0x4D656E75
	.4byte 0x28293A20
	.4byte 0x46616C69
	.4byte 0x65642074
	.4byte 0x6F20626F
	.4byte 0x6F742073
	.4byte 0x79737465
	.4byte 0x6D206D65
	.4byte 0x6E752E0A
	.4byte 0x00000000
.endobj lbl_8070E10C

.obj "@2131", local
	.string "OSReturnToMenu(): Falied to boot system menu.\n"
.endobj "@2131"

.obj gap_07_8070E19B_data, global
.hidden gap_07_8070E19B_data
	.byte 0x00
.endobj gap_07_8070E19B_data

.obj lbl_8070E19C, global
	.4byte 0x4F535265
	.4byte 0x7475726E
	.4byte 0x546F4461
	.4byte 0x74614D61
	.4byte 0x6E616765
	.4byte 0x7228293A
	.4byte 0x2046616C
	.4byte 0x69656420
	.4byte 0x746F2062
	.4byte 0x6F6F7420
	.4byte 0x73797374
	.4byte 0x656D206D
	.4byte 0x656E752E
	.4byte 0x0A000000
	.4byte 0x43616C65
	.4byte 0x6E646172
	.4byte 0x2F43616C
	.4byte 0x656E6461
	.4byte 0x725F696E
	.4byte 0x6465782E
	.4byte 0x68746D6C
	.4byte 0x00000000
	.4byte 0x44697370
	.4byte 0x6C61792F
	.4byte 0x44697370
	.4byte 0x6C61795F
	.4byte 0x696E6465
	.4byte 0x782E6874
	.4byte 0x6D6C0000
	.4byte 0x536F756E
	.4byte 0x642F536F
	.4byte 0x756E645F
	.4byte 0x696E6465
	.4byte 0x782E6874
	.4byte 0x6D6C0000
	.4byte 0x50617265
	.4byte 0x6E74616C
	.4byte 0x5F436F6E
	.4byte 0x74726F6C
	.4byte 0x2F506172
	.4byte 0x656E7461
	.4byte 0x6C5F436F
	.4byte 0x6E74726F
	.4byte 0x6C5F696E
	.4byte 0x6465782E
	.4byte 0x68746D6C
	.4byte 0x00000000
	.4byte 0x496E7465
	.4byte 0x726E6574
	.4byte 0x2F496E74
	.4byte 0x65726E65
	.4byte 0x745F696E
	.4byte 0x6465782E
	.4byte 0x68746D6C
	.4byte 0x00000000
	.4byte 0x57696943
	.4byte 0x6F6E6E65
	.4byte 0x63743234
	.4byte 0x2F576969
	.4byte 0x636F6E6E
	.4byte 0x65637432
	.4byte 0x345F696E
	.4byte 0x6465782E
	.4byte 0x68746D6C
	.4byte 0x00000000
	.4byte 0x55706461
	.4byte 0x74652F55
	.4byte 0x70646174
	.4byte 0x655F696E
	.4byte 0x6465782E
	.4byte 0x68746D6C
	.4byte 0x00000000
	.4byte 0x4F535265
	.4byte 0x7475726E
	.4byte 0x546F5365
	.4byte 0x7474696E
	.4byte 0x6728293A
	.4byte 0x20596F75
	.4byte 0x2063616E
	.4byte 0x27742073
	.4byte 0x70656369
	.4byte 0x66792025
	.4byte 0x642E2020
	.4byte 0x0A000000
.endobj lbl_8070E19C

.obj "@2163", local
	.string "OSResetSystem() is obsoleted. It doesn't work any longer.\n"
.endobj "@2163"

.obj gap_07_8070E327_data, global
.hidden gap_07_8070E327_data
	.4byte 0x004F5353
	.4byte 0x6574426F
	.4byte 0x6F74446F
	.4byte 0x6C282920
	.4byte 0x6973206F
	.4byte 0x62736F6C
	.4byte 0x65746564
	.4byte 0x2E204974
	.4byte 0x20646F65
	.4byte 0x736E2774
	.4byte 0x20776F72
	.4byte 0x6B20616E
	.4byte 0x79206C6F
	.4byte 0x6E676572
	.4byte 0x2E0A0000
	.4byte 0x00000000
	.byte 0x00
.endobj gap_07_8070E327_data

# 0x807D66D8 - 0x807D66E8
.section .sbss, "wa", @nobits
.balign 8

.obj lbl_807D66D8, global
	.skip 0x4
.endobj lbl_807D66D8

.obj lbl_807D66DC, global
	.skip 0x4
.endobj lbl_807D66DC

.obj ShutdownFunctionQueue, local
	.skip 0x8
.endobj ShutdownFunctionQueue
