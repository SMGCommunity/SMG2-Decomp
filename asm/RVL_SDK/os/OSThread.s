.include "macros.inc"
.file "OSThread.c"

# 0x805BC520 - 0x805BDD70
.text
.balign 4

.fn fn_805BC520, global
/* 805BC520 005B7EA0  4E 80 00 20 */	blr
.endfn fn_805BC520

.fn gap_03_805BC524_text, global
.hidden gap_03_805BC524_text
/* 805BC524 005B7EA4  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BC528 005B7EA8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BC52C 005B7EAC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC524_text

.fn __OSThreadInit, global
/* 805BC530 005B7EB0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BC534 005B7EB4  7C 08 02 A6 */	mflr r0
/* 805BC538 005B7EB8  38 60 00 02 */	li r3, 0x2
/* 805BC53C 005B7EBC  38 C0 00 01 */	li r6, 0x1
/* 805BC540 005B7EC0  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BC544 005B7EC4  38 80 00 00 */	li r4, 0x0
/* 805BC548 005B7EC8  38 A0 00 10 */	li r5, 0x10
/* 805BC54C 005B7ECC  38 00 FF FF */	li r0, -0x1
/* 805BC550 005B7ED0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 805BC554 005B7ED4  3F E0 80 78 */	lis r31, DefaultThread@ha
/* 805BC558 005B7ED8  3B FF E8 D8 */	addi r31, r31, DefaultThread@l
/* 805BC55C 005B7EDC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 805BC560 005B7EE0  3B DF 00 00 */	addi r30, r31, 0x0
/* 805BC564 005B7EE4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 805BC568 005B7EE8  3F A0 80 00 */	lis r29, 0x8000
/* 805BC56C 005B7EEC  B0 7E 02 C8 */	sth r3, 0x2c8(r30)
/* 805BC570 005B7EF0  7F C3 F3 78 */	mr r3, r30
/* 805BC574 005B7EF4  B0 DE 02 CA */	sth r6, 0x2ca(r30)
/* 805BC578 005B7EF8  90 BE 02 D4 */	stw r5, 0x2d4(r30)
/* 805BC57C 005B7EFC  90 BE 02 D0 */	stw r5, 0x2d0(r30)
/* 805BC580 005B7F00  90 9E 02 CC */	stw r4, 0x2cc(r30)
/* 805BC584 005B7F04  90 1E 02 D8 */	stw r0, 0x2d8(r30)
/* 805BC588 005B7F08  90 9E 02 F0 */	stw r4, 0x2f0(r30)
/* 805BC58C 005B7F0C  90 9E 02 EC */	stw r4, 0x2ec(r30)
/* 805BC590 005B7F10  90 9E 02 E8 */	stw r4, 0x2e8(r30)
/* 805BC594 005B7F14  90 9E 02 F8 */	stw r4, 0x2f8(r30)
/* 805BC598 005B7F18  90 9E 02 F4 */	stw r4, 0x2f4(r30)
/* 805BC59C 005B7F1C  93 DD 00 D8 */	stw r30, 0xd8(r29)
/* 805BC5A0 005B7F20  4B FF 97 21 */	bl OSClearContext
/* 805BC5A4 005B7F24  7F C3 F3 78 */	mr r3, r30
/* 805BC5A8 005B7F28  4B FF 94 D9 */	bl OSSetCurrentContext
/* 805BC5AC 005B7F2C  3C 60 80 7F */	lis r3, _stack_addr@ha
/* 805BC5B0 005B7F30  3C A0 80 7E */	lis r5, _stack_end@ha
/* 805BC5B4 005B7F34  38 63 31 88 */	addi r3, r3, _stack_addr@l
/* 805BC5B8 005B7F38  90 7E 03 04 */	stw r3, 0x304(r30)
/* 805BC5BC 005B7F3C  38 A5 31 88 */	addi r5, r5, _stack_end@l
/* 805BC5C0 005B7F40  7F C4 F3 78 */	mr r4, r30
/* 805BC5C4 005B7F44  3C 60 DE AE */	lis r3, 0xdeae
/* 805BC5C8 005B7F48  90 BE 03 08 */	stw r5, 0x308(r30)
/* 805BC5CC 005B7F4C  38 03 BA BE */	subi r0, r3, 0x4542
/* 805BC5D0 005B7F50  90 05 00 00 */	stw r0, 0x0(r5)
/* 805BC5D4 005B7F54  81 8D 96 70 */	lwz r12, SwitchThreadCallback@sda21(r0)
/* 805BC5D8 005B7F58  80 7D 00 E4 */	lwz r3, 0xe4(r29)
/* 805BC5DC 005B7F5C  7D 89 03 A6 */	mtctr r12
/* 805BC5E0 005B7F60  4E 80 04 21 */	bctrl
/* 805BC5E4 005B7F64  93 DD 00 E4 */	stw r30, 0xe4(r29)
/* 805BC5E8 005B7F68  4B FF 96 69 */	bl OSGetStackPointer
/* 805BC5EC 005B7F6C  80 9D 00 E4 */	lwz r4, 0xe4(r29)
/* 805BC5F0 005B7F70  80 84 03 08 */	lwz r4, 0x308(r4)
/* 805BC5F4 005B7F74  39 04 00 04 */	addi r8, r4, 0x4
/* 805BC5F8 005B7F78  7C 88 18 40 */	cmplw cr1, r8, r3
/* 805BC5FC 005B7F7C  40 84 00 C0 */	bge cr1, .L_805BC6BC
/* 805BC600 005B7F80  7C A8 18 50 */	subf r5, r8, r3
/* 805BC604 005B7F84  38 C3 FF E0 */	subi r6, r3, 0x20
/* 805BC608 005B7F88  38 85 00 03 */	addi r4, r5, 0x3
/* 805BC60C 005B7F8C  7C 80 16 70 */	srawi r0, r4, 2
/* 805BC610 005B7F90  7C 00 01 94 */	addze r0, r0
/* 805BC614 005B7F94  2C 00 00 08 */	cmpwi r0, 0x8
/* 805BC618 005B7F98  40 81 00 7C */	ble .L_805BC694
/* 805BC61C 005B7F9C  38 E0 00 00 */	li r7, 0x0
/* 805BC620 005B7FA0  41 85 00 28 */	bgt cr1, .L_805BC648
/* 805BC624 005B7FA4  54 A0 00 01 */	clrrwi. r0, r5, 31
/* 805BC628 005B7FA8  38 A0 00 01 */	li r5, 0x1
/* 805BC62C 005B7FAC  40 82 00 10 */	bne .L_805BC63C
/* 805BC630 005B7FB0  54 80 00 01 */	clrrwi. r0, r4, 31
/* 805BC634 005B7FB4  41 82 00 08 */	beq .L_805BC63C
/* 805BC638 005B7FB8  38 A0 00 00 */	li r5, 0x0
.L_805BC63C:
/* 805BC63C 005B7FBC  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BC640 005B7FC0  41 82 00 08 */	beq .L_805BC648
/* 805BC644 005B7FC4  38 E0 00 01 */	li r7, 0x1
.L_805BC648:
/* 805BC648 005B7FC8  2C 07 00 00 */	cmpwi r7, 0x0
/* 805BC64C 005B7FCC  41 82 00 48 */	beq .L_805BC694
/* 805BC650 005B7FD0  38 06 00 1F */	addi r0, r6, 0x1f
/* 805BC654 005B7FD4  38 80 00 00 */	li r4, 0x0
/* 805BC658 005B7FD8  7C 08 00 50 */	subf r0, r8, r0
/* 805BC65C 005B7FDC  54 00 D9 7E */	srwi r0, r0, 5
/* 805BC660 005B7FE0  7C 09 03 A6 */	mtctr r0
/* 805BC664 005B7FE4  7C 08 30 40 */	cmplw r8, r6
/* 805BC668 005B7FE8  40 80 00 2C */	bge .L_805BC694
.L_805BC66C:
/* 805BC66C 005B7FEC  90 88 00 00 */	stw r4, 0x0(r8)
/* 805BC670 005B7FF0  90 88 00 04 */	stw r4, 0x4(r8)
/* 805BC674 005B7FF4  90 88 00 08 */	stw r4, 0x8(r8)
/* 805BC678 005B7FF8  90 88 00 0C */	stw r4, 0xc(r8)
/* 805BC67C 005B7FFC  90 88 00 10 */	stw r4, 0x10(r8)
/* 805BC680 005B8000  90 88 00 14 */	stw r4, 0x14(r8)
/* 805BC684 005B8004  90 88 00 18 */	stw r4, 0x18(r8)
/* 805BC688 005B8008  90 88 00 1C */	stw r4, 0x1c(r8)
/* 805BC68C 005B800C  39 08 00 20 */	addi r8, r8, 0x20
/* 805BC690 005B8010  42 00 FF DC */	bdnz .L_805BC66C
.L_805BC694:
/* 805BC694 005B8014  38 03 00 03 */	addi r0, r3, 0x3
/* 805BC698 005B8018  38 80 00 00 */	li r4, 0x0
/* 805BC69C 005B801C  7C 08 00 50 */	subf r0, r8, r0
/* 805BC6A0 005B8020  54 00 F0 BE */	srwi r0, r0, 2
/* 805BC6A4 005B8024  7C 09 03 A6 */	mtctr r0
/* 805BC6A8 005B8028  7C 08 18 40 */	cmplw r8, r3
/* 805BC6AC 005B802C  40 80 00 10 */	bge .L_805BC6BC
.L_805BC6B0:
/* 805BC6B0 005B8030  90 88 00 00 */	stw r4, 0x0(r8)
/* 805BC6B4 005B8034  39 08 00 04 */	addi r8, r8, 0x4
/* 805BC6B8 005B8038  42 00 FF F8 */	bdnz .L_805BC6B0
.L_805BC6BC:
/* 805BC6BC 005B803C  38 00 00 02 */	li r0, 0x2
/* 805BC6C0 005B8040  38 60 00 00 */	li r3, 0x0
/* 805BC6C4 005B8044  90 6D F3 D0 */	stw r3, RunQueueBits@sda21(r0)
/* 805BC6C8 005B8048  38 9F 03 18 */	addi r4, r31, 0x318
/* 805BC6CC 005B804C  90 6D F3 CC */	stw r3, RunQueueHint@sda21(r0)
/* 805BC6D0 005B8050  7C 09 03 A6 */	mtctr r0
.L_805BC6D4:
/* 805BC6D4 005B8054  90 64 00 04 */	stw r3, 0x4(r4)
/* 805BC6D8 005B8058  90 64 00 00 */	stw r3, 0x0(r4)
/* 805BC6DC 005B805C  90 64 00 0C */	stw r3, 0xc(r4)
/* 805BC6E0 005B8060  90 64 00 08 */	stw r3, 0x8(r4)
/* 805BC6E4 005B8064  90 64 00 14 */	stw r3, 0x14(r4)
/* 805BC6E8 005B8068  90 64 00 10 */	stw r3, 0x10(r4)
/* 805BC6EC 005B806C  90 64 00 1C */	stw r3, 0x1c(r4)
/* 805BC6F0 005B8070  90 64 00 18 */	stw r3, 0x18(r4)
/* 805BC6F4 005B8074  90 64 00 24 */	stw r3, 0x24(r4)
/* 805BC6F8 005B8078  90 64 00 20 */	stw r3, 0x20(r4)
/* 805BC6FC 005B807C  90 64 00 2C */	stw r3, 0x2c(r4)
/* 805BC700 005B8080  90 64 00 28 */	stw r3, 0x28(r4)
/* 805BC704 005B8084  90 64 00 34 */	stw r3, 0x34(r4)
/* 805BC708 005B8088  90 64 00 30 */	stw r3, 0x30(r4)
/* 805BC70C 005B808C  90 64 00 3C */	stw r3, 0x3c(r4)
/* 805BC710 005B8090  90 64 00 38 */	stw r3, 0x38(r4)
/* 805BC714 005B8094  90 64 00 44 */	stw r3, 0x44(r4)
/* 805BC718 005B8098  90 64 00 40 */	stw r3, 0x40(r4)
/* 805BC71C 005B809C  90 64 00 4C */	stw r3, 0x4c(r4)
/* 805BC720 005B80A0  90 64 00 48 */	stw r3, 0x48(r4)
/* 805BC724 005B80A4  90 64 00 54 */	stw r3, 0x54(r4)
/* 805BC728 005B80A8  90 64 00 50 */	stw r3, 0x50(r4)
/* 805BC72C 005B80AC  90 64 00 5C */	stw r3, 0x5c(r4)
/* 805BC730 005B80B0  90 64 00 58 */	stw r3, 0x58(r4)
/* 805BC734 005B80B4  90 64 00 64 */	stw r3, 0x64(r4)
/* 805BC738 005B80B8  90 64 00 60 */	stw r3, 0x60(r4)
/* 805BC73C 005B80BC  90 64 00 6C */	stw r3, 0x6c(r4)
/* 805BC740 005B80C0  90 64 00 68 */	stw r3, 0x68(r4)
/* 805BC744 005B80C4  90 64 00 74 */	stw r3, 0x74(r4)
/* 805BC748 005B80C8  90 64 00 70 */	stw r3, 0x70(r4)
/* 805BC74C 005B80CC  90 64 00 7C */	stw r3, 0x7c(r4)
/* 805BC750 005B80D0  90 64 00 78 */	stw r3, 0x78(r4)
/* 805BC754 005B80D4  38 84 00 80 */	addi r4, r4, 0x80
/* 805BC758 005B80D8  42 00 FF 7C */	bdnz .L_805BC6D4
/* 805BC75C 005B80DC  3C 60 80 00 */	lis r3, 0x8000
/* 805BC760 005B80E0  38 80 00 00 */	li r4, 0x0
/* 805BC764 005B80E4  90 83 00 E0 */	stw r4, 0xe0(r3)
/* 805BC768 005B80E8  90 83 00 DC */	stw r4, 0xdc(r3)
/* 805BC76C 005B80EC  93 C3 00 DC */	stw r30, 0xdc(r3)
/* 805BC770 005B80F0  48 00 00 08 */	b .L_805BC778
/* 805BC774 005B80F4  93 C4 02 FC */	stw r30, 0x2fc(r4)
.L_805BC778:
/* 805BC778 005B80F8  3B A0 00 00 */	li r29, 0x0
/* 805BC77C 005B80FC  90 9E 03 00 */	stw r4, 0x300(r30)
/* 805BC780 005B8100  3C 80 80 00 */	lis r4, 0x8000
/* 805BC784 005B8104  38 7F 04 18 */	addi r3, r31, 0x418
/* 805BC788 005B8108  93 BE 02 FC */	stw r29, 0x2fc(r30)
/* 805BC78C 005B810C  93 C4 00 E0 */	stw r30, 0xe0(r4)
/* 805BC790 005B8110  4B FF 95 31 */	bl OSClearContext
/* 805BC794 005B8114  93 AD F3 C8 */	stw r29, Reschedule@sda21(r0)
/* 805BC798 005B8118  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BC79C 005B811C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 805BC7A0 005B8120  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 805BC7A4 005B8124  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 805BC7A8 005B8128  7C 08 03 A6 */	mtlr r0
/* 805BC7AC 005B812C  38 21 00 20 */	addi r1, r1, 0x20
/* 805BC7B0 005B8130  4E 80 00 20 */	blr
.endfn __OSThreadInit

.fn gap_03_805BC7B4_text, global
.hidden gap_03_805BC7B4_text
/* 805BC7B4 005B8134  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BC7B8 005B8138  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BC7BC 005B813C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC7B4_text

.fn OSInitThreadQueue, global
/* 805BC7C0 005B8140  38 00 00 00 */	li r0, 0x0
/* 805BC7C4 005B8144  90 03 00 04 */	stw r0, 0x4(r3)
/* 805BC7C8 005B8148  90 03 00 00 */	stw r0, 0x0(r3)
/* 805BC7CC 005B814C  4E 80 00 20 */	blr
.endfn OSInitThreadQueue

.fn fn_805BC7D0, global
/* 805BC7D0 005B8150  3C 60 80 00 */	lis r3, 0x8000
/* 805BC7D4 005B8154  80 63 00 E4 */	lwz r3, 0xe4(r3)
/* 805BC7D8 005B8158  4E 80 00 20 */	blr
.endfn fn_805BC7D0

.fn gap_03_805BC7DC_text, global
.hidden gap_03_805BC7DC_text
/* 805BC7DC 005B815C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC7DC_text

.fn fn_805BC7E0, global
/* 805BC7E0 005B8160  80 63 02 CC */	lwz r3, 0x2cc(r3)
/* 805BC7E4 005B8164  7C 03 00 D0 */	neg r0, r3
/* 805BC7E8 005B8168  7C 00 18 78 */	andc r0, r0, r3
/* 805BC7EC 005B816C  54 03 0F FE */	srwi r3, r0, 31
/* 805BC7F0 005B8170  4E 80 00 20 */	blr
.endfn fn_805BC7E0

.fn gap_03_805BC7F4_text, global
.hidden gap_03_805BC7F4_text
/* 805BC7F4 005B8174  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BC7F8 005B8178  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BC7FC 005B817C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC7F4_text

.fn fn_805BC800, global
/* 805BC800 005B8180  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 805BC804 005B8184  38 60 00 01 */	li r3, 0x1
/* 805BC808 005B8188  28 00 00 08 */	cmplwi r0, 0x8
/* 805BC80C 005B818C  41 82 00 10 */	beq .L_805BC81C
/* 805BC810 005B8190  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BC814 005B8194  41 82 00 08 */	beq .L_805BC81C
/* 805BC818 005B8198  38 60 00 00 */	li r3, 0x0
.L_805BC81C:
/* 805BC81C 005B819C  7C 03 00 D0 */	neg r0, r3
/* 805BC820 005B81A0  7C 00 1B 78 */	or r0, r0, r3
/* 805BC824 005B81A4  54 03 0F FE */	srwi r3, r0, 31
/* 805BC828 005B81A8  4E 80 00 20 */	blr
.endfn fn_805BC800

.fn gap_03_805BC82C_text, global
.hidden gap_03_805BC82C_text
/* 805BC82C 005B81AC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC82C_text

.fn OSDisableScheduler, global
/* 805BC830 005B81B0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BC834 005B81B4  7C 08 02 A6 */	mflr r0
/* 805BC838 005B81B8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BC83C 005B81BC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BC840 005B81C0  4B FF D1 91 */	bl OSDisableInterrupts
/* 805BC844 005B81C4  83 ED F3 C8 */	lwz r31, Reschedule@sda21(r0)
/* 805BC848 005B81C8  38 1F 00 01 */	addi r0, r31, 0x1
/* 805BC84C 005B81CC  90 0D F3 C8 */	stw r0, Reschedule@sda21(r0)
/* 805BC850 005B81D0  4B FF D1 C1 */	bl OSRestoreInterrupts
/* 805BC854 005B81D4  7F E3 FB 78 */	mr r3, r31
/* 805BC858 005B81D8  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BC85C 005B81DC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BC860 005B81E0  7C 08 03 A6 */	mtlr r0
/* 805BC864 005B81E4  38 21 00 10 */	addi r1, r1, 0x10
/* 805BC868 005B81E8  4E 80 00 20 */	blr
.endfn OSDisableScheduler

.fn gap_03_805BC86C_text, global
.hidden gap_03_805BC86C_text
/* 805BC86C 005B81EC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC86C_text

.fn OSEnableScheduler, global
/* 805BC870 005B81F0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BC874 005B81F4  7C 08 02 A6 */	mflr r0
/* 805BC878 005B81F8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BC87C 005B81FC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BC880 005B8200  4B FF D1 51 */	bl OSDisableInterrupts
/* 805BC884 005B8204  83 ED F3 C8 */	lwz r31, Reschedule@sda21(r0)
/* 805BC888 005B8208  38 1F FF FF */	subi r0, r31, 0x1
/* 805BC88C 005B820C  90 0D F3 C8 */	stw r0, Reschedule@sda21(r0)
/* 805BC890 005B8210  4B FF D1 81 */	bl OSRestoreInterrupts
/* 805BC894 005B8214  7F E3 FB 78 */	mr r3, r31
/* 805BC898 005B8218  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BC89C 005B821C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BC8A0 005B8220  7C 08 03 A6 */	mtlr r0
/* 805BC8A4 005B8224  38 21 00 10 */	addi r1, r1, 0x10
/* 805BC8A8 005B8228  4E 80 00 20 */	blr
.endfn OSEnableScheduler

.fn gap_03_805BC8AC_text, global
.hidden gap_03_805BC8AC_text
/* 805BC8AC 005B822C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC8AC_text

.fn fn_805BC8B0, global
/* 805BC8B0 005B8230  80 A3 02 E0 */	lwz r5, 0x2e0(r3)
/* 805BC8B4 005B8234  80 83 02 DC */	lwz r4, 0x2dc(r3)
/* 805BC8B8 005B8238  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BC8BC 005B823C  80 C3 02 E4 */	lwz r6, 0x2e4(r3)
/* 805BC8C0 005B8240  40 82 00 0C */	bne .L_805BC8CC
/* 805BC8C4 005B8244  90 C4 00 04 */	stw r6, 0x4(r4)
/* 805BC8C8 005B8248  48 00 00 08 */	b .L_805BC8D0
.L_805BC8CC:
/* 805BC8CC 005B824C  90 C5 02 E4 */	stw r6, 0x2e4(r5)
.L_805BC8D0:
/* 805BC8D0 005B8250  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BC8D4 005B8254  40 82 00 0C */	bne .L_805BC8E0
/* 805BC8D8 005B8258  90 A4 00 00 */	stw r5, 0x0(r4)
/* 805BC8DC 005B825C  48 00 00 08 */	b .L_805BC8E4
.L_805BC8E0:
/* 805BC8E0 005B8260  90 A6 02 E0 */	stw r5, 0x2e0(r6)
.L_805BC8E4:
/* 805BC8E4 005B8264  80 04 00 00 */	lwz r0, 0x0(r4)
/* 805BC8E8 005B8268  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BC8EC 005B826C  40 82 00 20 */	bne .L_805BC90C
/* 805BC8F0 005B8270  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 805BC8F4 005B8274  38 80 00 01 */	li r4, 0x1
/* 805BC8F8 005B8278  80 AD F3 D0 */	lwz r5, RunQueueBits@sda21(r0)
/* 805BC8FC 005B827C  20 00 00 1F */	subfic r0, r0, 0x1f
/* 805BC900 005B8280  7C 80 00 30 */	slw r0, r4, r0
/* 805BC904 005B8284  7C A0 00 78 */	andc r0, r5, r0
/* 805BC908 005B8288  90 0D F3 D0 */	stw r0, RunQueueBits@sda21(r0)
.L_805BC90C:
/* 805BC90C 005B828C  38 00 00 00 */	li r0, 0x0
/* 805BC910 005B8290  90 03 02 DC */	stw r0, 0x2dc(r3)
/* 805BC914 005B8294  4E 80 00 20 */	blr
.endfn fn_805BC8B0

.fn gap_03_805BC918_text, global
.hidden gap_03_805BC918_text
/* 805BC918 005B8298  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BC91C 005B829C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BC918_text

.fn fn_805BC920, global
/* 805BC920 005B82A0  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 805BC924 005B82A4  80 63 02 F4 */	lwz r3, 0x2f4(r3)
/* 805BC928 005B82A8  48 00 00 28 */	b .L_805BC950
/* 805BC92C 005B82AC  60 00 00 00 */	nop
.L_805BC930:
/* 805BC930 005B82B0  80 A3 00 00 */	lwz r5, 0x0(r3)
/* 805BC934 005B82B4  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BC938 005B82B8  41 82 00 14 */	beq .L_805BC94C
/* 805BC93C 005B82BC  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 805BC940 005B82C0  7C 00 20 00 */	cmpw r0, r4
/* 805BC944 005B82C4  40 80 00 08 */	bge .L_805BC94C
/* 805BC948 005B82C8  7C 04 03 78 */	mr r4, r0
.L_805BC94C:
/* 805BC94C 005B82CC  80 63 00 10 */	lwz r3, 0x10(r3)
.L_805BC950:
/* 805BC950 005B82D0  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BC954 005B82D4  40 82 FF DC */	bne .L_805BC930
/* 805BC958 005B82D8  7C 83 23 78 */	mr r3, r4
/* 805BC95C 005B82DC  4E 80 00 20 */	blr
.endfn fn_805BC920

.fn fn_805BC960, global
/* 805BC960 005B82E0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BC964 005B82E4  7C 08 02 A6 */	mflr r0
/* 805BC968 005B82E8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BC96C 005B82EC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BC970 005B82F0  7C 9F 23 78 */	mr r31, r4
/* 805BC974 005B82F4  93 C1 00 08 */	stw r30, 0x8(r1)
/* 805BC978 005B82F8  7C 7E 1B 78 */	mr r30, r3
/* 805BC97C 005B82FC  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 805BC980 005B8300  2C 00 00 01 */	cmpwi r0, 0x1
/* 805BC984 005B8304  41 82 00 18 */	beq .L_805BC99C
/* 805BC988 005B8308  2C 00 00 04 */	cmpwi r0, 0x4
/* 805BC98C 005B830C  41 82 00 7C */	beq .L_805BCA08
/* 805BC990 005B8310  2C 00 00 02 */	cmpwi r0, 0x2
/* 805BC994 005B8314  41 82 01 4C */	beq .L_805BCAE0
/* 805BC998 005B8318  48 00 01 54 */	b .L_805BCAEC
.L_805BC99C:
/* 805BC99C 005B831C  4B FF FF 15 */	bl fn_805BC8B0
/* 805BC9A0 005B8320  3C 60 80 78 */	lis r3, lbl_8077EBF0@ha
/* 805BC9A4 005B8324  57 E0 18 38 */	slwi r0, r31, 3
/* 805BC9A8 005B8328  38 63 EB F0 */	addi r3, r3, lbl_8077EBF0@l
/* 805BC9AC 005B832C  93 FE 02 D0 */	stw r31, 0x2d0(r30)
/* 805BC9B0 005B8330  7C 63 02 14 */	add r3, r3, r0
/* 805BC9B4 005B8334  90 7E 02 DC */	stw r3, 0x2dc(r30)
/* 805BC9B8 005B8338  80 83 00 04 */	lwz r4, 0x4(r3)
/* 805BC9BC 005B833C  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BC9C0 005B8340  40 82 00 0C */	bne .L_805BC9CC
/* 805BC9C4 005B8344  93 C3 00 00 */	stw r30, 0x0(r3)
/* 805BC9C8 005B8348  48 00 00 08 */	b .L_805BC9D0
.L_805BC9CC:
/* 805BC9CC 005B834C  93 C4 02 E0 */	stw r30, 0x2e0(r4)
.L_805BC9D0:
/* 805BC9D0 005B8350  38 00 00 00 */	li r0, 0x0
/* 805BC9D4 005B8354  90 9E 02 E4 */	stw r4, 0x2e4(r30)
/* 805BC9D8 005B8358  80 9E 02 DC */	lwz r4, 0x2dc(r30)
/* 805BC9DC 005B835C  38 60 00 01 */	li r3, 0x1
/* 805BC9E0 005B8360  90 1E 02 E0 */	stw r0, 0x2e0(r30)
/* 805BC9E4 005B8364  93 C4 00 04 */	stw r30, 0x4(r4)
/* 805BC9E8 005B8368  80 1E 02 D0 */	lwz r0, 0x2d0(r30)
/* 805BC9EC 005B836C  80 8D F3 D0 */	lwz r4, RunQueueBits@sda21(r0)
/* 805BC9F0 005B8370  20 00 00 1F */	subfic r0, r0, 0x1f
/* 805BC9F4 005B8374  7C 60 00 30 */	slw r0, r3, r0
/* 805BC9F8 005B8378  7C 80 03 78 */	or r0, r4, r0
/* 805BC9FC 005B837C  90 0D F3 D0 */	stw r0, RunQueueBits@sda21(r0)
/* 805BCA00 005B8380  90 6D F3 CC */	stw r3, RunQueueHint@sda21(r0)
/* 805BCA04 005B8384  48 00 00 E8 */	b .L_805BCAEC
.L_805BCA08:
/* 805BCA08 005B8388  80 C3 02 E0 */	lwz r6, 0x2e0(r3)
/* 805BCA0C 005B838C  80 E3 02 E4 */	lwz r7, 0x2e4(r3)
/* 805BCA10 005B8390  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BCA14 005B8394  40 82 00 10 */	bne .L_805BCA24
/* 805BCA18 005B8398  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 805BCA1C 005B839C  90 E5 00 04 */	stw r7, 0x4(r5)
/* 805BCA20 005B83A0  48 00 00 08 */	b .L_805BCA28
.L_805BCA24:
/* 805BCA24 005B83A4  90 E6 02 E4 */	stw r7, 0x2e4(r6)
.L_805BCA28:
/* 805BCA28 005B83A8  2C 07 00 00 */	cmpwi r7, 0x0
/* 805BCA2C 005B83AC  40 82 00 10 */	bne .L_805BCA3C
/* 805BCA30 005B83B0  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 805BCA34 005B83B4  90 C5 00 00 */	stw r6, 0x0(r5)
/* 805BCA38 005B83B8  48 00 00 08 */	b .L_805BCA40
.L_805BCA3C:
/* 805BCA3C 005B83BC  90 C7 02 E0 */	stw r6, 0x2e0(r7)
.L_805BCA40:
/* 805BCA40 005B83C0  90 83 02 D0 */	stw r4, 0x2d0(r3)
/* 805BCA44 005B83C4  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 805BCA48 005B83C8  80 C5 00 00 */	lwz r6, 0x0(r5)
/* 805BCA4C 005B83CC  48 00 00 08 */	b .L_805BCA54
.L_805BCA50:
/* 805BCA50 005B83D0  80 C6 02 E0 */	lwz r6, 0x2e0(r6)
.L_805BCA54:
/* 805BCA54 005B83D4  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BCA58 005B83D8  41 82 00 14 */	beq .L_805BCA6C
/* 805BCA5C 005B83DC  80 86 02 D0 */	lwz r4, 0x2d0(r6)
/* 805BCA60 005B83E0  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 805BCA64 005B83E4  7C 04 00 00 */	cmpw r4, r0
/* 805BCA68 005B83E8  40 81 FF E8 */	ble .L_805BCA50
.L_805BCA6C:
/* 805BCA6C 005B83EC  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BCA70 005B83F0  40 82 00 34 */	bne .L_805BCAA4
/* 805BCA74 005B83F4  80 85 00 04 */	lwz r4, 0x4(r5)
/* 805BCA78 005B83F8  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BCA7C 005B83FC  40 82 00 0C */	bne .L_805BCA88
/* 805BCA80 005B8400  90 65 00 00 */	stw r3, 0x0(r5)
/* 805BCA84 005B8404  48 00 00 08 */	b .L_805BCA8C
.L_805BCA88:
/* 805BCA88 005B8408  90 64 02 E0 */	stw r3, 0x2e0(r4)
.L_805BCA8C:
/* 805BCA8C 005B840C  38 00 00 00 */	li r0, 0x0
/* 805BCA90 005B8410  90 83 02 E4 */	stw r4, 0x2e4(r3)
/* 805BCA94 005B8414  80 83 02 DC */	lwz r4, 0x2dc(r3)
/* 805BCA98 005B8418  90 03 02 E0 */	stw r0, 0x2e0(r3)
/* 805BCA9C 005B841C  90 64 00 04 */	stw r3, 0x4(r4)
/* 805BCAA0 005B8420  48 00 00 2C */	b .L_805BCACC
.L_805BCAA4:
/* 805BCAA4 005B8424  90 C3 02 E0 */	stw r6, 0x2e0(r3)
/* 805BCAA8 005B8428  80 86 02 E4 */	lwz r4, 0x2e4(r6)
/* 805BCAAC 005B842C  90 66 02 E4 */	stw r3, 0x2e4(r6)
/* 805BCAB0 005B8430  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BCAB4 005B8434  90 83 02 E4 */	stw r4, 0x2e4(r3)
/* 805BCAB8 005B8438  40 82 00 10 */	bne .L_805BCAC8
/* 805BCABC 005B843C  80 83 02 DC */	lwz r4, 0x2dc(r3)
/* 805BCAC0 005B8440  90 64 00 00 */	stw r3, 0x0(r4)
/* 805BCAC4 005B8444  48 00 00 08 */	b .L_805BCACC
.L_805BCAC8:
/* 805BCAC8 005B8448  90 64 02 E0 */	stw r3, 0x2e0(r4)
.L_805BCACC:
/* 805BCACC 005B844C  80 63 02 F0 */	lwz r3, 0x2f0(r3)
/* 805BCAD0 005B8450  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BCAD4 005B8454  41 82 00 18 */	beq .L_805BCAEC
/* 805BCAD8 005B8458  80 63 00 08 */	lwz r3, 0x8(r3)
/* 805BCADC 005B845C  48 00 00 14 */	b .L_805BCAF0
.L_805BCAE0:
/* 805BCAE0 005B8460  38 00 00 01 */	li r0, 0x1
/* 805BCAE4 005B8464  90 0D F3 CC */	stw r0, RunQueueHint@sda21(r0)
/* 805BCAE8 005B8468  90 83 02 D0 */	stw r4, 0x2d0(r3)
.L_805BCAEC:
/* 805BCAEC 005B846C  38 60 00 00 */	li r3, 0x0
.L_805BCAF0:
/* 805BCAF0 005B8470  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BCAF4 005B8474  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BCAF8 005B8478  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 805BCAFC 005B847C  7C 08 03 A6 */	mtlr r0
/* 805BCB00 005B8480  38 21 00 10 */	addi r1, r1, 0x10
/* 805BCB04 005B8484  4E 80 00 20 */	blr
.endfn fn_805BC960

.fn gap_03_805BCB08_text, global
.hidden gap_03_805BCB08_text
/* 805BCB08 005B8488  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BCB0C 005B848C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BCB08_text

.fn fn_805BCB10, global
/* 805BCB10 005B8490  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BCB14 005B8494  7C 08 02 A6 */	mflr r0
/* 805BCB18 005B8498  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BCB1C 005B849C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BCB20 005B84A0  7C 9F 23 78 */	mr r31, r4
.L_805BCB24:
/* 805BCB24 005B84A4  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 805BCB28 005B84A8  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BCB2C 005B84AC  41 81 00 20 */	bgt .L_805BCB4C
/* 805BCB30 005B84B0  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 805BCB34 005B84B4  7C 00 F8 00 */	cmpw r0, r31
/* 805BCB38 005B84B8  40 81 00 14 */	ble .L_805BCB4C
/* 805BCB3C 005B84BC  7F E4 FB 78 */	mr r4, r31
/* 805BCB40 005B84C0  4B FF FE 21 */	bl fn_805BC960
/* 805BCB44 005B84C4  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BCB48 005B84C8  40 82 FF DC */	bne .L_805BCB24
.L_805BCB4C:
/* 805BCB4C 005B84CC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BCB50 005B84D0  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BCB54 005B84D4  7C 08 03 A6 */	mtlr r0
/* 805BCB58 005B84D8  38 21 00 10 */	addi r1, r1, 0x10
/* 805BCB5C 005B84DC  4E 80 00 20 */	blr
.endfn fn_805BCB10

.fn SelectThread, local
/* 805BCB60 005B84E0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BCB64 005B84E4  7C 08 02 A6 */	mflr r0
/* 805BCB68 005B84E8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BCB6C 005B84EC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BCB70 005B84F0  93 C1 00 08 */	stw r30, 0x8(r1)
/* 805BCB74 005B84F4  7C 7E 1B 78 */	mr r30, r3
/* 805BCB78 005B84F8  80 0D F3 C8 */	lwz r0, Reschedule@sda21(r0)
/* 805BCB7C 005B84FC  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BCB80 005B8500  40 81 00 0C */	ble .L_805BCB8C
/* 805BCB84 005B8504  38 60 00 00 */	li r3, 0x0
/* 805BCB88 005B8508  48 00 01 EC */	b .L_805BCD74
.L_805BCB8C:
/* 805BCB8C 005B850C  4B FF 8F 55 */	bl fn_805B5AE0
/* 805BCB90 005B8510  3C 80 80 00 */	lis r4, 0x8000
/* 805BCB94 005B8514  80 A4 00 E4 */	lwz r5, 0xe4(r4)
/* 805BCB98 005B8518  7C 03 28 40 */	cmplw r3, r5
/* 805BCB9C 005B851C  41 82 00 0C */	beq .L_805BCBA8
/* 805BCBA0 005B8520  38 60 00 00 */	li r3, 0x0
/* 805BCBA4 005B8524  48 00 01 D0 */	b .L_805BCD74
.L_805BCBA8:
/* 805BCBA8 005B8528  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BCBAC 005B852C  41 82 00 C4 */	beq .L_805BCC70
/* 805BCBB0 005B8530  A0 05 02 C8 */	lhz r0, 0x2c8(r5)
/* 805BCBB4 005B8534  28 00 00 02 */	cmplwi r0, 0x2
/* 805BCBB8 005B8538  40 82 00 94 */	bne .L_805BCC4C
/* 805BCBBC 005B853C  2C 1E 00 00 */	cmpwi r30, 0x0
/* 805BCBC0 005B8540  40 82 00 20 */	bne .L_805BCBE0
/* 805BCBC4 005B8544  80 6D F3 D0 */	lwz r3, RunQueueBits@sda21(r0)
/* 805BCBC8 005B8548  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 805BCBCC 005B854C  7C 63 00 34 */	cntlzw r3, r3
/* 805BCBD0 005B8550  7C 00 18 00 */	cmpw r0, r3
/* 805BCBD4 005B8554  41 81 00 0C */	bgt .L_805BCBE0
/* 805BCBD8 005B8558  38 60 00 00 */	li r3, 0x0
/* 805BCBDC 005B855C  48 00 01 98 */	b .L_805BCD74
.L_805BCBE0:
/* 805BCBE0 005B8560  38 00 00 01 */	li r0, 0x1
/* 805BCBE4 005B8564  B0 05 02 C8 */	sth r0, 0x2c8(r5)
/* 805BCBE8 005B8568  3C 60 80 78 */	lis r3, lbl_8077EBF0@ha
/* 805BCBEC 005B856C  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 805BCBF0 005B8570  38 63 EB F0 */	addi r3, r3, lbl_8077EBF0@l
/* 805BCBF4 005B8574  54 00 18 38 */	slwi r0, r0, 3
/* 805BCBF8 005B8578  7C 63 02 14 */	add r3, r3, r0
/* 805BCBFC 005B857C  90 65 02 DC */	stw r3, 0x2dc(r5)
/* 805BCC00 005B8580  80 83 00 04 */	lwz r4, 0x4(r3)
/* 805BCC04 005B8584  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BCC08 005B8588  40 82 00 0C */	bne .L_805BCC14
/* 805BCC0C 005B858C  90 A3 00 00 */	stw r5, 0x0(r3)
/* 805BCC10 005B8590  48 00 00 08 */	b .L_805BCC18
.L_805BCC14:
/* 805BCC14 005B8594  90 A4 02 E0 */	stw r5, 0x2e0(r4)
.L_805BCC18:
/* 805BCC18 005B8598  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 805BCC1C 005B859C  38 00 00 00 */	li r0, 0x0
/* 805BCC20 005B85A0  38 60 00 01 */	li r3, 0x1
/* 805BCC24 005B85A4  90 05 02 E0 */	stw r0, 0x2e0(r5)
/* 805BCC28 005B85A8  80 85 02 DC */	lwz r4, 0x2dc(r5)
/* 805BCC2C 005B85AC  90 A4 00 04 */	stw r5, 0x4(r4)
/* 805BCC30 005B85B0  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 805BCC34 005B85B4  80 8D F3 D0 */	lwz r4, RunQueueBits@sda21(r0)
/* 805BCC38 005B85B8  20 00 00 1F */	subfic r0, r0, 0x1f
/* 805BCC3C 005B85BC  7C 60 00 30 */	slw r0, r3, r0
/* 805BCC40 005B85C0  7C 80 03 78 */	or r0, r4, r0
/* 805BCC44 005B85C4  90 0D F3 D0 */	stw r0, RunQueueBits@sda21(r0)
/* 805BCC48 005B85C8  90 6D F3 CC */	stw r3, RunQueueHint@sda21(r0)
.L_805BCC4C:
/* 805BCC4C 005B85CC  A0 05 01 A2 */	lhz r0, 0x1a2(r5)
/* 805BCC50 005B85D0  54 00 07 BD */	rlwinm. r0, r0, 0, 30, 30
/* 805BCC54 005B85D4  40 82 00 1C */	bne .L_805BCC70
/* 805BCC58 005B85D8  7C A3 2B 78 */	mr r3, r5
/* 805BCC5C 005B85DC  4B FF 8E 95 */	bl fn_805B5AF0
/* 805BCC60 005B85E0  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BCC64 005B85E4  41 82 00 0C */	beq .L_805BCC70
/* 805BCC68 005B85E8  38 60 00 00 */	li r3, 0x0
/* 805BCC6C 005B85EC  48 00 01 08 */	b .L_805BCD74
.L_805BCC70:
/* 805BCC70 005B85F0  80 0D F3 D0 */	lwz r0, RunQueueBits@sda21(r0)
/* 805BCC74 005B85F4  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BCC78 005B85F8  40 82 00 60 */	bne .L_805BCCD8
/* 805BCC7C 005B85FC  81 8D 96 70 */	lwz r12, SwitchThreadCallback@sda21(r0)
/* 805BCC80 005B8600  3F E0 80 00 */	lis r31, 0x8000
/* 805BCC84 005B8604  80 7F 00 E4 */	lwz r3, 0xe4(r31)
/* 805BCC88 005B8608  38 80 00 00 */	li r4, 0x0
/* 805BCC8C 005B860C  7D 89 03 A6 */	mtctr r12
/* 805BCC90 005B8610  4E 80 04 21 */	bctrl
/* 805BCC94 005B8614  38 00 00 00 */	li r0, 0x0
/* 805BCC98 005B8618  3C 60 80 78 */	lis r3, lbl_8077ECF0@ha
/* 805BCC9C 005B861C  90 1F 00 E4 */	stw r0, 0xe4(r31)
/* 805BCCA0 005B8620  38 63 EC F0 */	addi r3, r3, lbl_8077ECF0@l
/* 805BCCA4 005B8624  4B FF 8D DD */	bl OSSetCurrentContext
.L_805BCCA8:
/* 805BCCA8 005B8628  4B FF CD 49 */	bl OSEnableInterrupts
/* 805BCCAC 005B862C  60 00 00 00 */	nop
.L_805BCCB0:
/* 805BCCB0 005B8630  80 0D F3 D0 */	lwz r0, RunQueueBits@sda21(r0)
/* 805BCCB4 005B8634  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BCCB8 005B8638  41 82 FF F8 */	beq .L_805BCCB0
/* 805BCCBC 005B863C  4B FF CD 15 */	bl OSDisableInterrupts
/* 805BCCC0 005B8640  80 0D F3 D0 */	lwz r0, RunQueueBits@sda21(r0)
/* 805BCCC4 005B8644  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BCCC8 005B8648  41 82 FF E0 */	beq .L_805BCCA8
/* 805BCCCC 005B864C  3C 60 80 78 */	lis r3, lbl_8077ECF0@ha
/* 805BCCD0 005B8650  38 63 EC F0 */	addi r3, r3, lbl_8077ECF0@l
/* 805BCCD4 005B8654  4B FF 8F ED */	bl OSClearContext
.L_805BCCD8:
/* 805BCCD8 005B8658  38 80 00 00 */	li r4, 0x0
/* 805BCCDC 005B865C  90 8D F3 CC */	stw r4, RunQueueHint@sda21(r0)
/* 805BCCE0 005B8660  80 0D F3 D0 */	lwz r0, RunQueueBits@sda21(r0)
/* 805BCCE4 005B8664  3C 60 80 78 */	lis r3, lbl_8077EBF0@ha
/* 805BCCE8 005B8668  38 63 EB F0 */	addi r3, r3, lbl_8077EBF0@l
/* 805BCCEC 005B866C  7C 05 00 34 */	cntlzw r5, r0
/* 805BCCF0 005B8670  54 A0 18 38 */	slwi r0, r5, 3
/* 805BCCF4 005B8674  7F C3 00 6E */	lwzux r30, r3, r0
/* 805BCCF8 005B8678  80 DE 02 E0 */	lwz r6, 0x2e0(r30)
/* 805BCCFC 005B867C  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BCD00 005B8680  40 82 00 0C */	bne .L_805BCD0C
/* 805BCD04 005B8684  90 83 00 04 */	stw r4, 0x4(r3)
/* 805BCD08 005B8688  48 00 00 08 */	b .L_805BCD10
.L_805BCD0C:
/* 805BCD0C 005B868C  90 86 02 E4 */	stw r4, 0x2e4(r6)
.L_805BCD10:
/* 805BCD10 005B8690  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BCD14 005B8694  90 C3 00 00 */	stw r6, 0x0(r3)
/* 805BCD18 005B8698  40 82 00 1C */	bne .L_805BCD34
/* 805BCD1C 005B869C  20 05 00 1F */	subfic r0, r5, 0x1f
/* 805BCD20 005B86A0  38 60 00 01 */	li r3, 0x1
/* 805BCD24 005B86A4  80 8D F3 D0 */	lwz r4, RunQueueBits@sda21(r0)
/* 805BCD28 005B86A8  7C 60 00 30 */	slw r0, r3, r0
/* 805BCD2C 005B86AC  7C 80 00 78 */	andc r0, r4, r0
/* 805BCD30 005B86B0  90 0D F3 D0 */	stw r0, RunQueueBits@sda21(r0)
.L_805BCD34:
/* 805BCD34 005B86B4  38 00 00 00 */	li r0, 0x0
/* 805BCD38 005B86B8  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 805BCD3C 005B86BC  38 00 00 02 */	li r0, 0x2
/* 805BCD40 005B86C0  3F E0 80 00 */	lis r31, 0x8000
/* 805BCD44 005B86C4  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 805BCD48 005B86C8  7F C4 F3 78 */	mr r4, r30
/* 805BCD4C 005B86CC  81 8D 96 70 */	lwz r12, SwitchThreadCallback@sda21(r0)
/* 805BCD50 005B86D0  80 7F 00 E4 */	lwz r3, 0xe4(r31)
/* 805BCD54 005B86D4  7D 89 03 A6 */	mtctr r12
/* 805BCD58 005B86D8  4E 80 04 21 */	bctrl
/* 805BCD5C 005B86DC  93 DF 00 E4 */	stw r30, 0xe4(r31)
/* 805BCD60 005B86E0  7F C3 F3 78 */	mr r3, r30
/* 805BCD64 005B86E4  4B FF 8D 1D */	bl OSSetCurrentContext
/* 805BCD68 005B86E8  7F C3 F3 78 */	mr r3, r30
/* 805BCD6C 005B86EC  4B FF 8E 05 */	bl OSLoadContext
/* 805BCD70 005B86F0  7F C3 F3 78 */	mr r3, r30
.L_805BCD74:
/* 805BCD74 005B86F4  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BCD78 005B86F8  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BCD7C 005B86FC  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 805BCD80 005B8700  7C 08 03 A6 */	mtlr r0
/* 805BCD84 005B8704  38 21 00 10 */	addi r1, r1, 0x10
/* 805BCD88 005B8708  4E 80 00 20 */	blr
.endfn SelectThread

.fn gap_03_805BCD8C_text, global
.hidden gap_03_805BCD8C_text
/* 805BCD8C 005B870C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BCD8C_text

.fn __OSReschedule, global
/* 805BCD90 005B8710  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BCD94 005B8714  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BCD98 005B8718  4D 82 00 20 */	beqlr
/* 805BCD9C 005B871C  38 60 00 00 */	li r3, 0x0
/* 805BCDA0 005B8720  4B FF FD C0 */	b SelectThread
/* 805BCDA4 005B8724  4E 80 00 20 */	blr
.endfn __OSReschedule

.fn gap_03_805BCDA8_text, global
.hidden gap_03_805BCDA8_text
/* 805BCDA8 005B8728  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BCDAC 005B872C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BCDA8_text

.fn fn_805BCDB0, global
/* 805BCDB0 005B8730  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BCDB4 005B8734  7C 08 02 A6 */	mflr r0
/* 805BCDB8 005B8738  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BCDBC 005B873C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BCDC0 005B8740  4B FF CC 11 */	bl OSDisableInterrupts
/* 805BCDC4 005B8744  7C 7F 1B 78 */	mr r31, r3
/* 805BCDC8 005B8748  38 60 00 01 */	li r3, 0x1
/* 805BCDCC 005B874C  4B FF FD 95 */	bl SelectThread
/* 805BCDD0 005B8750  7F E3 FB 78 */	mr r3, r31
/* 805BCDD4 005B8754  4B FF CC 3D */	bl OSRestoreInterrupts
/* 805BCDD8 005B8758  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BCDDC 005B875C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BCDE0 005B8760  7C 08 03 A6 */	mtlr r0
/* 805BCDE4 005B8764  38 21 00 10 */	addi r1, r1, 0x10
/* 805BCDE8 005B8768  4E 80 00 20 */	blr
.endfn fn_805BCDB0

.fn gap_03_805BCDEC_text, global
.hidden gap_03_805BCDEC_text
/* 805BCDEC 005B876C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BCDEC_text

.fn fn_805BCDF0, global
/* 805BCDF0 005B8770  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BCDF4 005B8774  7C 08 02 A6 */	mflr r0
/* 805BCDF8 005B8778  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BCDFC 005B877C  39 61 00 20 */	addi r11, r1, 0x20
/* 805BCE00 005B8780  48 07 13 61 */	bl _savegpr_26
/* 805BCE04 005B8784  2C 08 00 00 */	cmpwi r8, 0x0
/* 805BCE08 005B8788  7C 7F 1B 78 */	mr r31, r3
/* 805BCE0C 005B878C  7C BA 2B 78 */	mr r26, r5
/* 805BCE10 005B8790  7C DB 33 78 */	mr r27, r6
/* 805BCE14 005B8794  7C FC 3B 78 */	mr r28, r7
/* 805BCE18 005B8798  41 80 00 0C */	blt .L_805BCE24
/* 805BCE1C 005B879C  2C 08 00 1F */	cmpwi r8, 0x1f
/* 805BCE20 005B87A0  40 81 00 0C */	ble .L_805BCE2C
.L_805BCE24:
/* 805BCE24 005B87A4  38 60 00 00 */	li r3, 0x0
/* 805BCE28 005B87A8  48 00 02 1C */	b .L_805BD044
.L_805BCE2C:
/* 805BCE2C 005B87AC  38 E0 00 01 */	li r7, 0x1
/* 805BCE30 005B87B0  55 20 07 FE */	clrlwi r0, r9, 31
/* 805BCE34 005B87B4  3B C0 00 00 */	li r30, 0x0
/* 805BCE38 005B87B8  3B A0 FF FF */	li r29, -0x1
/* 805BCE3C 005B87BC  54 C6 00 38 */	clrrwi r6, r6, 3
/* 805BCE40 005B87C0  B0 E3 02 C8 */	sth r7, 0x2c8(r3)
/* 805BCE44 005B87C4  38 A6 FF F8 */	subi r5, r6, 0x8
/* 805BCE48 005B87C8  B0 03 02 CA */	sth r0, 0x2ca(r3)
/* 805BCE4C 005B87CC  91 03 02 D4 */	stw r8, 0x2d4(r3)
/* 805BCE50 005B87D0  91 03 02 D0 */	stw r8, 0x2d0(r3)
/* 805BCE54 005B87D4  90 E3 02 CC */	stw r7, 0x2cc(r3)
/* 805BCE58 005B87D8  93 A3 02 D8 */	stw r29, 0x2d8(r3)
/* 805BCE5C 005B87DC  93 C3 02 F0 */	stw r30, 0x2f0(r3)
/* 805BCE60 005B87E0  93 C3 02 EC */	stw r30, 0x2ec(r3)
/* 805BCE64 005B87E4  93 C3 02 E8 */	stw r30, 0x2e8(r3)
/* 805BCE68 005B87E8  93 C3 02 F8 */	stw r30, 0x2f8(r3)
/* 805BCE6C 005B87EC  93 C3 02 F4 */	stw r30, 0x2f4(r3)
/* 805BCE70 005B87F0  93 C6 FF F8 */	stw r30, -0x8(r6)
/* 805BCE74 005B87F4  93 C6 FF FC */	stw r30, -0x4(r6)
/* 805BCE78 005B87F8  4B FF 8E 79 */	bl fn_805B5CF0
/* 805BCE7C 005B87FC  3C 60 80 5C */	lis r3, fn_805BD060@ha
/* 805BCE80 005B8800  7C 9C D8 50 */	subf r4, r28, r27
/* 805BCE84 005B8804  38 63 D0 60 */	addi r3, r3, fn_805BD060@l
/* 805BCE88 005B8808  90 7F 00 84 */	stw r3, 0x84(r31)
/* 805BCE8C 005B880C  3C 60 DE AE */	lis r3, 0xdeae
/* 805BCE90 005B8810  93 5F 00 0C */	stw r26, 0xc(r31)
/* 805BCE94 005B8814  38 03 BA BE */	subi r0, r3, 0x4542
/* 805BCE98 005B8818  93 7F 03 04 */	stw r27, 0x304(r31)
/* 805BCE9C 005B881C  90 9F 03 08 */	stw r4, 0x308(r31)
/* 805BCEA0 005B8820  90 04 00 00 */	stw r0, 0x0(r4)
/* 805BCEA4 005B8824  93 DF 03 0C */	stw r30, 0x30c(r31)
/* 805BCEA8 005B8828  93 DF 03 10 */	stw r30, 0x310(r31)
/* 805BCEAC 005B882C  93 DF 03 14 */	stw r30, 0x314(r31)
/* 805BCEB0 005B8830  4B FF CB 21 */	bl OSDisableInterrupts
/* 805BCEB4 005B8834  3C 80 80 78 */	lis r4, __OSErrorTable@ha
/* 805BCEB8 005B8838  38 84 E5 30 */	addi r4, r4, __OSErrorTable@l
/* 805BCEBC 005B883C  80 04 00 40 */	lwz r0, 0x40(r4)
/* 805BCEC0 005B8840  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BCEC4 005B8844  41 82 01 48 */	beq .L_805BD00C
/* 805BCEC8 005B8848  80 BF 01 9C */	lwz r5, 0x19c(r31)
/* 805BCECC 005B884C  38 00 00 02 */	li r0, 0x2
/* 805BCED0 005B8850  A0 9F 01 A2 */	lhz r4, 0x1a2(r31)
/* 805BCED4 005B8854  38 DF 00 90 */	addi r6, r31, 0x90
/* 805BCED8 005B8858  60 A5 09 00 */	ori r5, r5, 0x900
/* 805BCEDC 005B885C  90 BF 01 9C */	stw r5, 0x19c(r31)
/* 805BCEE0 005B8860  60 84 00 01 */	ori r4, r4, 0x1
/* 805BCEE4 005B8864  B0 9F 01 A2 */	sth r4, 0x1a2(r31)
/* 805BCEE8 005B8868  38 BF 01 C8 */	addi r5, r31, 0x1c8
/* 805BCEEC 005B886C  80 8D 96 48 */	lwz r4, lbl_807D0968@sda21(r0)
/* 805BCEF0 005B8870  54 84 06 38 */	rlwinm r4, r4, 0, 24, 28
/* 805BCEF4 005B8874  60 84 00 04 */	ori r4, r4, 0x4
/* 805BCEF8 005B8878  90 9F 01 94 */	stw r4, 0x194(r31)
/* 805BCEFC 005B887C  7C 09 03 A6 */	mtctr r0
.L_805BCF00:
/* 805BCF00 005B8880  93 A6 00 04 */	stw r29, 0x4(r6)
/* 805BCF04 005B8884  93 A6 00 00 */	stw r29, 0x0(r6)
/* 805BCF08 005B8888  93 A5 00 04 */	stw r29, 0x4(r5)
/* 805BCF0C 005B888C  93 A5 00 00 */	stw r29, 0x0(r5)
/* 805BCF10 005B8890  93 A6 00 0C */	stw r29, 0xc(r6)
/* 805BCF14 005B8894  93 A6 00 08 */	stw r29, 0x8(r6)
/* 805BCF18 005B8898  93 A5 00 0C */	stw r29, 0xc(r5)
/* 805BCF1C 005B889C  93 A5 00 08 */	stw r29, 0x8(r5)
/* 805BCF20 005B88A0  93 A6 00 14 */	stw r29, 0x14(r6)
/* 805BCF24 005B88A4  93 A6 00 10 */	stw r29, 0x10(r6)
/* 805BCF28 005B88A8  93 A5 00 14 */	stw r29, 0x14(r5)
/* 805BCF2C 005B88AC  93 A5 00 10 */	stw r29, 0x10(r5)
/* 805BCF30 005B88B0  93 A6 00 1C */	stw r29, 0x1c(r6)
/* 805BCF34 005B88B4  93 A6 00 18 */	stw r29, 0x18(r6)
/* 805BCF38 005B88B8  93 A5 00 1C */	stw r29, 0x1c(r5)
/* 805BCF3C 005B88BC  93 A5 00 18 */	stw r29, 0x18(r5)
/* 805BCF40 005B88C0  93 A6 00 24 */	stw r29, 0x24(r6)
/* 805BCF44 005B88C4  93 A6 00 20 */	stw r29, 0x20(r6)
/* 805BCF48 005B88C8  93 A5 00 24 */	stw r29, 0x24(r5)
/* 805BCF4C 005B88CC  93 A5 00 20 */	stw r29, 0x20(r5)
/* 805BCF50 005B88D0  93 A6 00 2C */	stw r29, 0x2c(r6)
/* 805BCF54 005B88D4  93 A6 00 28 */	stw r29, 0x28(r6)
/* 805BCF58 005B88D8  93 A5 00 2C */	stw r29, 0x2c(r5)
/* 805BCF5C 005B88DC  93 A5 00 28 */	stw r29, 0x28(r5)
/* 805BCF60 005B88E0  93 A6 00 34 */	stw r29, 0x34(r6)
/* 805BCF64 005B88E4  93 A6 00 30 */	stw r29, 0x30(r6)
/* 805BCF68 005B88E8  93 A5 00 34 */	stw r29, 0x34(r5)
/* 805BCF6C 005B88EC  93 A5 00 30 */	stw r29, 0x30(r5)
/* 805BCF70 005B88F0  93 A6 00 3C */	stw r29, 0x3c(r6)
/* 805BCF74 005B88F4  93 A6 00 38 */	stw r29, 0x38(r6)
/* 805BCF78 005B88F8  93 A5 00 3C */	stw r29, 0x3c(r5)
/* 805BCF7C 005B88FC  93 A5 00 38 */	stw r29, 0x38(r5)
/* 805BCF80 005B8900  93 A6 00 44 */	stw r29, 0x44(r6)
/* 805BCF84 005B8904  93 A6 00 40 */	stw r29, 0x40(r6)
/* 805BCF88 005B8908  93 A5 00 44 */	stw r29, 0x44(r5)
/* 805BCF8C 005B890C  93 A5 00 40 */	stw r29, 0x40(r5)
/* 805BCF90 005B8910  93 A6 00 4C */	stw r29, 0x4c(r6)
/* 805BCF94 005B8914  93 A6 00 48 */	stw r29, 0x48(r6)
/* 805BCF98 005B8918  93 A5 00 4C */	stw r29, 0x4c(r5)
/* 805BCF9C 005B891C  93 A5 00 48 */	stw r29, 0x48(r5)
/* 805BCFA0 005B8920  93 A6 00 54 */	stw r29, 0x54(r6)
/* 805BCFA4 005B8924  93 A6 00 50 */	stw r29, 0x50(r6)
/* 805BCFA8 005B8928  93 A5 00 54 */	stw r29, 0x54(r5)
/* 805BCFAC 005B892C  93 A5 00 50 */	stw r29, 0x50(r5)
/* 805BCFB0 005B8930  93 A6 00 5C */	stw r29, 0x5c(r6)
/* 805BCFB4 005B8934  93 A6 00 58 */	stw r29, 0x58(r6)
/* 805BCFB8 005B8938  93 A5 00 5C */	stw r29, 0x5c(r5)
/* 805BCFBC 005B893C  93 A5 00 58 */	stw r29, 0x58(r5)
/* 805BCFC0 005B8940  93 A6 00 64 */	stw r29, 0x64(r6)
/* 805BCFC4 005B8944  93 A6 00 60 */	stw r29, 0x60(r6)
/* 805BCFC8 005B8948  93 A5 00 64 */	stw r29, 0x64(r5)
/* 805BCFCC 005B894C  93 A5 00 60 */	stw r29, 0x60(r5)
/* 805BCFD0 005B8950  93 A6 00 6C */	stw r29, 0x6c(r6)
/* 805BCFD4 005B8954  93 A6 00 68 */	stw r29, 0x68(r6)
/* 805BCFD8 005B8958  93 A5 00 6C */	stw r29, 0x6c(r5)
/* 805BCFDC 005B895C  93 A5 00 68 */	stw r29, 0x68(r5)
/* 805BCFE0 005B8960  93 A6 00 74 */	stw r29, 0x74(r6)
/* 805BCFE4 005B8964  93 A6 00 70 */	stw r29, 0x70(r6)
/* 805BCFE8 005B8968  93 A5 00 74 */	stw r29, 0x74(r5)
/* 805BCFEC 005B896C  93 A5 00 70 */	stw r29, 0x70(r5)
/* 805BCFF0 005B8970  93 A6 00 7C */	stw r29, 0x7c(r6)
/* 805BCFF4 005B8974  93 A6 00 78 */	stw r29, 0x78(r6)
/* 805BCFF8 005B8978  38 C6 00 80 */	addi r6, r6, 0x80
/* 805BCFFC 005B897C  93 A5 00 7C */	stw r29, 0x7c(r5)
/* 805BD000 005B8980  93 A5 00 78 */	stw r29, 0x78(r5)
/* 805BD004 005B8984  38 A5 00 80 */	addi r5, r5, 0x80
/* 805BD008 005B8988  42 00 FE F8 */	bdnz .L_805BCF00
.L_805BD00C:
/* 805BD00C 005B898C  3C 80 80 00 */	lis r4, 0x8000
/* 805BD010 005B8990  80 A4 00 E0 */	lwz r5, 0xe0(r4)
/* 805BD014 005B8994  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD018 005B8998  40 82 00 0C */	bne .L_805BD024
/* 805BD01C 005B899C  93 E4 00 DC */	stw r31, 0xdc(r4)
/* 805BD020 005B89A0  48 00 00 08 */	b .L_805BD028
.L_805BD024:
/* 805BD024 005B89A4  93 E5 02 FC */	stw r31, 0x2fc(r5)
.L_805BD028:
/* 805BD028 005B89A8  38 00 00 00 */	li r0, 0x0
/* 805BD02C 005B89AC  90 BF 03 00 */	stw r5, 0x300(r31)
/* 805BD030 005B89B0  3C 80 80 00 */	lis r4, 0x8000
/* 805BD034 005B89B4  90 1F 02 FC */	stw r0, 0x2fc(r31)
/* 805BD038 005B89B8  93 E4 00 E0 */	stw r31, 0xe0(r4)
/* 805BD03C 005B89BC  4B FF C9 D5 */	bl OSRestoreInterrupts
/* 805BD040 005B89C0  38 60 00 01 */	li r3, 0x1
.L_805BD044:
/* 805BD044 005B89C4  39 61 00 20 */	addi r11, r1, 0x20
/* 805BD048 005B89C8  48 07 11 65 */	bl _restgpr_26
/* 805BD04C 005B89CC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BD050 005B89D0  7C 08 03 A6 */	mtlr r0
/* 805BD054 005B89D4  38 21 00 20 */	addi r1, r1, 0x20
/* 805BD058 005B89D8  4E 80 00 20 */	blr
.endfn fn_805BCDF0

.fn gap_03_805BD05C_text, global
.hidden gap_03_805BD05C_text
/* 805BD05C 005B89DC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BD05C_text

.fn fn_805BD060, global
/* 805BD060 005B89E0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BD064 005B89E4  7C 08 02 A6 */	mflr r0
/* 805BD068 005B89E8  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BD06C 005B89EC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 805BD070 005B89F0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 805BD074 005B89F4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 805BD078 005B89F8  93 81 00 10 */	stw r28, 0x10(r1)
/* 805BD07C 005B89FC  7C 7C 1B 78 */	mr r28, r3
/* 805BD080 005B8A00  4B FF C9 51 */	bl OSDisableInterrupts
/* 805BD084 005B8A04  3F E0 80 00 */	lis r31, 0x8000
/* 805BD088 005B8A08  7C 7D 1B 78 */	mr r29, r3
/* 805BD08C 005B8A0C  83 DF 00 E4 */	lwz r30, 0xe4(r31)
/* 805BD090 005B8A10  7F C3 F3 78 */	mr r3, r30
/* 805BD094 005B8A14  4B FF 8C 2D */	bl OSClearContext
/* 805BD098 005B8A18  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 805BD09C 005B8A1C  54 00 07 FF */	clrlwi. r0, r0, 31
/* 805BD0A0 005B8A20  41 82 00 44 */	beq .L_805BD0E4
/* 805BD0A4 005B8A24  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 805BD0A8 005B8A28  80 7E 03 00 */	lwz r3, 0x300(r30)
/* 805BD0AC 005B8A2C  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD0B0 005B8A30  40 82 00 0C */	bne .L_805BD0BC
/* 805BD0B4 005B8A34  90 7F 00 E0 */	stw r3, 0xe0(r31)
/* 805BD0B8 005B8A38  48 00 00 08 */	b .L_805BD0C0
.L_805BD0BC:
/* 805BD0BC 005B8A3C  90 64 03 00 */	stw r3, 0x300(r4)
.L_805BD0C0:
/* 805BD0C0 005B8A40  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD0C4 005B8A44  40 82 00 10 */	bne .L_805BD0D4
/* 805BD0C8 005B8A48  3C 60 80 00 */	lis r3, 0x8000
/* 805BD0CC 005B8A4C  90 83 00 DC */	stw r4, 0xdc(r3)
/* 805BD0D0 005B8A50  48 00 00 08 */	b .L_805BD0D8
.L_805BD0D4:
/* 805BD0D4 005B8A54  90 83 02 FC */	stw r4, 0x2fc(r3)
.L_805BD0D8:
/* 805BD0D8 005B8A58  38 00 00 00 */	li r0, 0x0
/* 805BD0DC 005B8A5C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 805BD0E0 005B8A60  48 00 00 10 */	b .L_805BD0F0
.L_805BD0E4:
/* 805BD0E4 005B8A64  38 00 00 08 */	li r0, 0x8
/* 805BD0E8 005B8A68  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 805BD0EC 005B8A6C  93 9E 02 D8 */	stw r28, 0x2d8(r30)
.L_805BD0F0:
/* 805BD0F0 005B8A70  7F C3 F3 78 */	mr r3, r30
/* 805BD0F4 005B8A74  4B FF DE 0D */	bl fn_805BAF00
/* 805BD0F8 005B8A78  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 805BD0FC 005B8A7C  48 00 09 45 */	bl fn_805BDA40
/* 805BD100 005B8A80  38 00 00 01 */	li r0, 0x1
/* 805BD104 005B8A84  90 0D F3 CC */	stw r0, RunQueueHint@sda21(r0)
/* 805BD108 005B8A88  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BD10C 005B8A8C  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD110 005B8A90  41 82 00 0C */	beq .L_805BD11C
/* 805BD114 005B8A94  38 60 00 00 */	li r3, 0x0
/* 805BD118 005B8A98  4B FF FA 49 */	bl SelectThread
.L_805BD11C:
/* 805BD11C 005B8A9C  7F A3 EB 78 */	mr r3, r29
/* 805BD120 005B8AA0  4B FF C8 F1 */	bl OSRestoreInterrupts
/* 805BD124 005B8AA4  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BD128 005B8AA8  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 805BD12C 005B8AAC  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 805BD130 005B8AB0  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 805BD134 005B8AB4  83 81 00 10 */	lwz r28, 0x10(r1)
/* 805BD138 005B8AB8  7C 08 03 A6 */	mtlr r0
/* 805BD13C 005B8ABC  38 21 00 20 */	addi r1, r1, 0x20
/* 805BD140 005B8AC0  4E 80 00 20 */	blr
.endfn fn_805BD060

.fn gap_03_805BD144_text, global
.hidden gap_03_805BD144_text
/* 805BD144 005B8AC4  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BD148 005B8AC8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BD14C 005B8ACC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BD144_text

.fn OSCancelThread, global
/* 805BD150 005B8AD0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BD154 005B8AD4  7C 08 02 A6 */	mflr r0
/* 805BD158 005B8AD8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BD15C 005B8ADC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BD160 005B8AE0  93 C1 00 08 */	stw r30, 0x8(r1)
/* 805BD164 005B8AE4  7C 7E 1B 78 */	mr r30, r3
/* 805BD168 005B8AE8  4B FF C8 69 */	bl OSDisableInterrupts
/* 805BD16C 005B8AEC  7C 7F 1B 78 */	mr r31, r3
/* 805BD170 005B8AF0  7F C3 F3 78 */	mr r3, r30
/* 805BD174 005B8AF4  4B FF 78 ED */	bl fn_805B4A60
/* 805BD178 005B8AF8  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 805BD17C 005B8AFC  2C 00 00 01 */	cmpwi r0, 0x1
/* 805BD180 005B8B00  41 82 00 18 */	beq .L_805BD198
/* 805BD184 005B8B04  2C 00 00 02 */	cmpwi r0, 0x2
/* 805BD188 005B8B08  41 82 00 28 */	beq .L_805BD1B0
/* 805BD18C 005B8B0C  2C 00 00 04 */	cmpwi r0, 0x4
/* 805BD190 005B8B10  41 82 00 2C */	beq .L_805BD1BC
/* 805BD194 005B8B14  48 00 00 E0 */	b .L_805BD274
.L_805BD198:
/* 805BD198 005B8B18  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 805BD19C 005B8B1C  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD1A0 005B8B20  41 81 00 E0 */	bgt .L_805BD280
/* 805BD1A4 005B8B24  7F C3 F3 78 */	mr r3, r30
/* 805BD1A8 005B8B28  4B FF F7 09 */	bl fn_805BC8B0
/* 805BD1AC 005B8B2C  48 00 00 D4 */	b .L_805BD280
.L_805BD1B0:
/* 805BD1B0 005B8B30  38 00 00 01 */	li r0, 0x1
/* 805BD1B4 005B8B34  90 0D F3 CC */	stw r0, RunQueueHint@sda21(r0)
/* 805BD1B8 005B8B38  48 00 00 C8 */	b .L_805BD280
.L_805BD1BC:
/* 805BD1BC 005B8B3C  80 9E 02 E0 */	lwz r4, 0x2e0(r30)
/* 805BD1C0 005B8B40  80 BE 02 E4 */	lwz r5, 0x2e4(r30)
/* 805BD1C4 005B8B44  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD1C8 005B8B48  40 82 00 10 */	bne .L_805BD1D8
/* 805BD1CC 005B8B4C  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 805BD1D0 005B8B50  90 A3 00 04 */	stw r5, 0x4(r3)
/* 805BD1D4 005B8B54  48 00 00 08 */	b .L_805BD1DC
.L_805BD1D8:
/* 805BD1D8 005B8B58  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_805BD1DC:
/* 805BD1DC 005B8B5C  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD1E0 005B8B60  40 82 00 10 */	bne .L_805BD1F0
/* 805BD1E4 005B8B64  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 805BD1E8 005B8B68  90 83 00 00 */	stw r4, 0x0(r3)
/* 805BD1EC 005B8B6C  48 00 00 08 */	b .L_805BD1F4
.L_805BD1F0:
/* 805BD1F0 005B8B70  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_805BD1F4:
/* 805BD1F4 005B8B74  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 805BD1F8 005B8B78  38 60 00 00 */	li r3, 0x0
/* 805BD1FC 005B8B7C  90 7E 02 DC */	stw r3, 0x2dc(r30)
/* 805BD200 005B8B80  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD204 005B8B84  41 81 00 7C */	bgt .L_805BD280
/* 805BD208 005B8B88  80 7E 02 F0 */	lwz r3, 0x2f0(r30)
/* 805BD20C 005B8B8C  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD210 005B8B90  41 82 00 70 */	beq .L_805BD280
/* 805BD214 005B8B94  80 63 00 08 */	lwz r3, 0x8(r3)
.L_805BD218:
/* 805BD218 005B8B98  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 805BD21C 005B8B9C  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD220 005B8BA0  41 81 00 60 */	bgt .L_805BD280
/* 805BD224 005B8BA4  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 805BD228 005B8BA8  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 805BD22C 005B8BAC  48 00 00 24 */	b .L_805BD250
.L_805BD230:
/* 805BD230 005B8BB0  80 C5 00 00 */	lwz r6, 0x0(r5)
/* 805BD234 005B8BB4  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BD238 005B8BB8  41 82 00 14 */	beq .L_805BD24C
/* 805BD23C 005B8BBC  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 805BD240 005B8BC0  7C 00 20 00 */	cmpw r0, r4
/* 805BD244 005B8BC4  40 80 00 08 */	bge .L_805BD24C
/* 805BD248 005B8BC8  7C 04 03 78 */	mr r4, r0
.L_805BD24C:
/* 805BD24C 005B8BCC  80 A5 00 10 */	lwz r5, 0x10(r5)
.L_805BD250:
/* 805BD250 005B8BD0  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD254 005B8BD4  40 82 FF DC */	bne .L_805BD230
/* 805BD258 005B8BD8  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 805BD25C 005B8BDC  7C 00 20 00 */	cmpw r0, r4
/* 805BD260 005B8BE0  41 82 00 20 */	beq .L_805BD280
/* 805BD264 005B8BE4  4B FF F6 FD */	bl fn_805BC960
/* 805BD268 005B8BE8  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD26C 005B8BEC  40 82 FF AC */	bne .L_805BD218
/* 805BD270 005B8BF0  48 00 00 10 */	b .L_805BD280
.L_805BD274:
/* 805BD274 005B8BF4  7F E3 FB 78 */	mr r3, r31
/* 805BD278 005B8BF8  4B FF C7 99 */	bl OSRestoreInterrupts
/* 805BD27C 005B8BFC  48 00 00 90 */	b .L_805BD30C
.L_805BD280:
/* 805BD280 005B8C00  7F C3 F3 78 */	mr r3, r30
/* 805BD284 005B8C04  4B FF 8A 3D */	bl OSClearContext
/* 805BD288 005B8C08  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 805BD28C 005B8C0C  54 00 07 FF */	clrlwi. r0, r0, 31
/* 805BD290 005B8C10  41 82 00 48 */	beq .L_805BD2D8
/* 805BD294 005B8C14  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 805BD298 005B8C18  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 805BD29C 005B8C1C  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD2A0 005B8C20  40 82 00 10 */	bne .L_805BD2B0
/* 805BD2A4 005B8C24  3C 60 80 00 */	lis r3, 0x8000
/* 805BD2A8 005B8C28  90 A3 00 E0 */	stw r5, 0xe0(r3)
/* 805BD2AC 005B8C2C  48 00 00 08 */	b .L_805BD2B4
.L_805BD2B0:
/* 805BD2B0 005B8C30  90 A4 03 00 */	stw r5, 0x300(r4)
.L_805BD2B4:
/* 805BD2B4 005B8C34  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD2B8 005B8C38  40 82 00 10 */	bne .L_805BD2C8
/* 805BD2BC 005B8C3C  3C 60 80 00 */	lis r3, 0x8000
/* 805BD2C0 005B8C40  90 83 00 DC */	stw r4, 0xdc(r3)
/* 805BD2C4 005B8C44  48 00 00 08 */	b .L_805BD2CC
.L_805BD2C8:
/* 805BD2C8 005B8C48  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_805BD2CC:
/* 805BD2CC 005B8C4C  38 00 00 00 */	li r0, 0x0
/* 805BD2D0 005B8C50  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 805BD2D4 005B8C54  48 00 00 0C */	b .L_805BD2E0
.L_805BD2D8:
/* 805BD2D8 005B8C58  38 00 00 08 */	li r0, 0x8
/* 805BD2DC 005B8C5C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
.L_805BD2E0:
/* 805BD2E0 005B8C60  7F C3 F3 78 */	mr r3, r30
/* 805BD2E4 005B8C64  4B FF DC 1D */	bl fn_805BAF00
/* 805BD2E8 005B8C68  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 805BD2EC 005B8C6C  48 00 07 55 */	bl fn_805BDA40
/* 805BD2F0 005B8C70  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BD2F4 005B8C74  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD2F8 005B8C78  41 82 00 0C */	beq .L_805BD304
/* 805BD2FC 005B8C7C  38 60 00 00 */	li r3, 0x0
/* 805BD300 005B8C80  4B FF F8 61 */	bl SelectThread
.L_805BD304:
/* 805BD304 005B8C84  7F E3 FB 78 */	mr r3, r31
/* 805BD308 005B8C88  4B FF C7 09 */	bl OSRestoreInterrupts
.L_805BD30C:
/* 805BD30C 005B8C8C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BD310 005B8C90  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BD314 005B8C94  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 805BD318 005B8C98  7C 08 03 A6 */	mtlr r0
/* 805BD31C 005B8C9C  38 21 00 10 */	addi r1, r1, 0x10
/* 805BD320 005B8CA0  4E 80 00 20 */	blr
.endfn OSCancelThread

.fn gap_03_805BD324_text, global
.hidden gap_03_805BD324_text
/* 805BD324 005B8CA4  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BD328 005B8CA8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BD32C 005B8CAC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BD324_text

.fn fn_805BD330, global
/* 805BD330 005B8CB0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BD334 005B8CB4  7C 08 02 A6 */	mflr r0
/* 805BD338 005B8CB8  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BD33C 005B8CBC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 805BD340 005B8CC0  7C 7F 1B 78 */	mr r31, r3
/* 805BD344 005B8CC4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 805BD348 005B8CC8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 805BD34C 005B8CCC  7C 9D 23 78 */	mr r29, r4
/* 805BD350 005B8CD0  4B FF C6 81 */	bl OSDisableInterrupts
/* 805BD354 005B8CD4  A0 1F 02 CA */	lhz r0, 0x2ca(r31)
/* 805BD358 005B8CD8  7C 7E 1B 78 */	mr r30, r3
/* 805BD35C 005B8CDC  54 00 07 FF */	clrlwi. r0, r0, 31
/* 805BD360 005B8CE0  40 82 00 80 */	bne .L_805BD3E0
/* 805BD364 005B8CE4  A0 1F 02 C8 */	lhz r0, 0x2c8(r31)
/* 805BD368 005B8CE8  28 00 00 08 */	cmplwi r0, 0x8
/* 805BD36C 005B8CEC  41 82 00 74 */	beq .L_805BD3E0
/* 805BD370 005B8CF0  80 1F 02 E8 */	lwz r0, 0x2e8(r31)
/* 805BD374 005B8CF4  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD378 005B8CF8  40 82 00 68 */	bne .L_805BD3E0
/* 805BD37C 005B8CFC  38 7F 02 E8 */	addi r3, r31, 0x2e8
/* 805BD380 005B8D00  48 00 05 D1 */	bl OSSleepThread
/* 805BD384 005B8D04  A0 1F 02 C8 */	lhz r0, 0x2c8(r31)
/* 805BD388 005B8D08  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD38C 005B8D0C  40 82 00 0C */	bne .L_805BD398
/* 805BD390 005B8D10  38 00 00 00 */	li r0, 0x0
/* 805BD394 005B8D14  48 00 00 34 */	b .L_805BD3C8
.L_805BD398:
/* 805BD398 005B8D18  3C 60 80 00 */	lis r3, 0x8000
/* 805BD39C 005B8D1C  80 63 00 DC */	lwz r3, 0xdc(r3)
/* 805BD3A0 005B8D20  48 00 00 1C */	b .L_805BD3BC
/* 805BD3A4 005B8D24  60 00 00 00 */	nop
.L_805BD3A8:
/* 805BD3A8 005B8D28  7C 1F 18 40 */	cmplw r31, r3
/* 805BD3AC 005B8D2C  40 82 00 0C */	bne .L_805BD3B8
/* 805BD3B0 005B8D30  38 00 00 01 */	li r0, 0x1
/* 805BD3B4 005B8D34  48 00 00 14 */	b .L_805BD3C8
.L_805BD3B8:
/* 805BD3B8 005B8D38  80 63 02 FC */	lwz r3, 0x2fc(r3)
.L_805BD3BC:
/* 805BD3BC 005B8D3C  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD3C0 005B8D40  40 82 FF E8 */	bne .L_805BD3A8
/* 805BD3C4 005B8D44  38 00 00 00 */	li r0, 0x0
.L_805BD3C8:
/* 805BD3C8 005B8D48  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD3CC 005B8D4C  40 82 00 14 */	bne .L_805BD3E0
/* 805BD3D0 005B8D50  7F C3 F3 78 */	mr r3, r30
/* 805BD3D4 005B8D54  4B FF C6 3D */	bl OSRestoreInterrupts
/* 805BD3D8 005B8D58  38 60 00 00 */	li r3, 0x0
/* 805BD3DC 005B8D5C  48 00 00 7C */	b .L_805BD458
.L_805BD3E0:
/* 805BD3E0 005B8D60  A0 1F 02 C8 */	lhz r0, 0x2c8(r31)
/* 805BD3E4 005B8D64  28 00 00 08 */	cmplwi r0, 0x8
/* 805BD3E8 005B8D68  40 82 00 64 */	bne .L_805BD44C
/* 805BD3EC 005B8D6C  2C 1D 00 00 */	cmpwi r29, 0x0
/* 805BD3F0 005B8D70  41 82 00 0C */	beq .L_805BD3FC
/* 805BD3F4 005B8D74  80 1F 02 D8 */	lwz r0, 0x2d8(r31)
/* 805BD3F8 005B8D78  90 1D 00 00 */	stw r0, 0x0(r29)
.L_805BD3FC:
/* 805BD3FC 005B8D7C  80 9F 02 FC */	lwz r4, 0x2fc(r31)
/* 805BD400 005B8D80  80 BF 03 00 */	lwz r5, 0x300(r31)
/* 805BD404 005B8D84  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD408 005B8D88  40 82 00 10 */	bne .L_805BD418
/* 805BD40C 005B8D8C  3C 60 80 00 */	lis r3, 0x8000
/* 805BD410 005B8D90  90 A3 00 E0 */	stw r5, 0xe0(r3)
/* 805BD414 005B8D94  48 00 00 08 */	b .L_805BD41C
.L_805BD418:
/* 805BD418 005B8D98  90 A4 03 00 */	stw r5, 0x300(r4)
.L_805BD41C:
/* 805BD41C 005B8D9C  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD420 005B8DA0  40 82 00 10 */	bne .L_805BD430
/* 805BD424 005B8DA4  3C 60 80 00 */	lis r3, 0x8000
/* 805BD428 005B8DA8  90 83 00 DC */	stw r4, 0xdc(r3)
/* 805BD42C 005B8DAC  48 00 00 08 */	b .L_805BD434
.L_805BD430:
/* 805BD430 005B8DB0  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_805BD434:
/* 805BD434 005B8DB4  38 00 00 00 */	li r0, 0x0
/* 805BD438 005B8DB8  B0 1F 02 C8 */	sth r0, 0x2c8(r31)
/* 805BD43C 005B8DBC  7F C3 F3 78 */	mr r3, r30
/* 805BD440 005B8DC0  4B FF C5 D1 */	bl OSRestoreInterrupts
/* 805BD444 005B8DC4  38 60 00 01 */	li r3, 0x1
/* 805BD448 005B8DC8  48 00 00 10 */	b .L_805BD458
.L_805BD44C:
/* 805BD44C 005B8DCC  7F C3 F3 78 */	mr r3, r30
/* 805BD450 005B8DD0  4B FF C5 C1 */	bl OSRestoreInterrupts
/* 805BD454 005B8DD4  38 60 00 00 */	li r3, 0x0
.L_805BD458:
/* 805BD458 005B8DD8  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BD45C 005B8DDC  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 805BD460 005B8DE0  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 805BD464 005B8DE4  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 805BD468 005B8DE8  7C 08 03 A6 */	mtlr r0
/* 805BD46C 005B8DEC  38 21 00 20 */	addi r1, r1, 0x20
/* 805BD470 005B8DF0  4E 80 00 20 */	blr
.endfn fn_805BD330

.fn gap_03_805BD474_text, global
.hidden gap_03_805BD474_text
/* 805BD474 005B8DF4  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BD478 005B8DF8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BD47C 005B8DFC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BD474_text

.fn fn_805BD480, global
/* 805BD480 005B8E00  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BD484 005B8E04  7C 08 02 A6 */	mflr r0
/* 805BD488 005B8E08  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BD48C 005B8E0C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BD490 005B8E10  93 C1 00 08 */	stw r30, 0x8(r1)
/* 805BD494 005B8E14  7C 7E 1B 78 */	mr r30, r3
/* 805BD498 005B8E18  4B FF C5 39 */	bl OSDisableInterrupts
/* 805BD49C 005B8E1C  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 805BD4A0 005B8E20  7C 7F 1B 78 */	mr r31, r3
/* 805BD4A4 005B8E24  A0 7E 02 CA */	lhz r3, 0x2ca(r30)
/* 805BD4A8 005B8E28  28 00 00 08 */	cmplwi r0, 0x8
/* 805BD4AC 005B8E2C  60 60 00 01 */	ori r0, r3, 0x1
/* 805BD4B0 005B8E30  B0 1E 02 CA */	sth r0, 0x2ca(r30)
/* 805BD4B4 005B8E34  40 82 00 44 */	bne .L_805BD4F8
/* 805BD4B8 005B8E38  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 805BD4BC 005B8E3C  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 805BD4C0 005B8E40  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD4C4 005B8E44  40 82 00 10 */	bne .L_805BD4D4
/* 805BD4C8 005B8E48  3C 60 80 00 */	lis r3, 0x8000
/* 805BD4CC 005B8E4C  90 A3 00 E0 */	stw r5, 0xe0(r3)
/* 805BD4D0 005B8E50  48 00 00 08 */	b .L_805BD4D8
.L_805BD4D4:
/* 805BD4D4 005B8E54  90 A4 03 00 */	stw r5, 0x300(r4)
.L_805BD4D8:
/* 805BD4D8 005B8E58  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD4DC 005B8E5C  40 82 00 10 */	bne .L_805BD4EC
/* 805BD4E0 005B8E60  3C 60 80 00 */	lis r3, 0x8000
/* 805BD4E4 005B8E64  90 83 00 DC */	stw r4, 0xdc(r3)
/* 805BD4E8 005B8E68  48 00 00 08 */	b .L_805BD4F0
.L_805BD4EC:
/* 805BD4EC 005B8E6C  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_805BD4F0:
/* 805BD4F0 005B8E70  38 00 00 00 */	li r0, 0x0
/* 805BD4F4 005B8E74  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
.L_805BD4F8:
/* 805BD4F8 005B8E78  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 805BD4FC 005B8E7C  48 00 05 45 */	bl fn_805BDA40
/* 805BD500 005B8E80  7F E3 FB 78 */	mr r3, r31
/* 805BD504 005B8E84  4B FF C5 0D */	bl OSRestoreInterrupts
/* 805BD508 005B8E88  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BD50C 005B8E8C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BD510 005B8E90  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 805BD514 005B8E94  7C 08 03 A6 */	mtlr r0
/* 805BD518 005B8E98  38 21 00 10 */	addi r1, r1, 0x10
/* 805BD51C 005B8E9C  4E 80 00 20 */	blr
.endfn fn_805BD480

.fn fn_805BD520, global
/* 805BD520 005B8EA0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BD524 005B8EA4  7C 08 02 A6 */	mflr r0
/* 805BD528 005B8EA8  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BD52C 005B8EAC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 805BD530 005B8EB0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 805BD534 005B8EB4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 805BD538 005B8EB8  7C 7D 1B 78 */	mr r29, r3
/* 805BD53C 005B8EBC  4B FF C4 95 */	bl OSDisableInterrupts
/* 805BD540 005B8EC0  83 DD 02 CC */	lwz r30, 0x2cc(r29)
/* 805BD544 005B8EC4  7C 7F 1B 78 */	mr r31, r3
/* 805BD548 005B8EC8  34 1E FF FF */	subic. r0, r30, 0x1
/* 805BD54C 005B8ECC  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 805BD550 005B8ED0  40 80 00 10 */	bge .L_805BD560
/* 805BD554 005B8ED4  38 00 00 00 */	li r0, 0x0
/* 805BD558 005B8ED8  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 805BD55C 005B8EDC  48 00 02 38 */	b .L_805BD794
.L_805BD560:
/* 805BD560 005B8EE0  40 82 02 34 */	bne .L_805BD794
/* 805BD564 005B8EE4  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 805BD568 005B8EE8  2C 00 00 01 */	cmpwi r0, 0x1
/* 805BD56C 005B8EEC  41 82 00 10 */	beq .L_805BD57C
/* 805BD570 005B8EF0  2C 00 00 04 */	cmpwi r0, 0x4
/* 805BD574 005B8EF4  41 82 00 A4 */	beq .L_805BD618
/* 805BD578 005B8EF8  48 00 02 08 */	b .L_805BD780
.L_805BD57C:
/* 805BD57C 005B8EFC  80 BD 02 D4 */	lwz r5, 0x2d4(r29)
/* 805BD580 005B8F00  80 9D 02 F4 */	lwz r4, 0x2f4(r29)
/* 805BD584 005B8F04  48 00 00 24 */	b .L_805BD5A8
.L_805BD588:
/* 805BD588 005B8F08  80 64 00 00 */	lwz r3, 0x0(r4)
/* 805BD58C 005B8F0C  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD590 005B8F10  41 82 00 14 */	beq .L_805BD5A4
/* 805BD594 005B8F14  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 805BD598 005B8F18  7C 00 28 00 */	cmpw r0, r5
/* 805BD59C 005B8F1C  40 80 00 08 */	bge .L_805BD5A4
/* 805BD5A0 005B8F20  7C 05 03 78 */	mr r5, r0
.L_805BD5A4:
/* 805BD5A4 005B8F24  80 84 00 10 */	lwz r4, 0x10(r4)
.L_805BD5A8:
/* 805BD5A8 005B8F28  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD5AC 005B8F2C  40 82 FF DC */	bne .L_805BD588
/* 805BD5B0 005B8F30  3C 60 80 78 */	lis r3, lbl_8077EBF0@ha
/* 805BD5B4 005B8F34  54 A0 18 38 */	slwi r0, r5, 3
/* 805BD5B8 005B8F38  38 63 EB F0 */	addi r3, r3, lbl_8077EBF0@l
/* 805BD5BC 005B8F3C  90 BD 02 D0 */	stw r5, 0x2d0(r29)
/* 805BD5C0 005B8F40  7C 63 02 14 */	add r3, r3, r0
/* 805BD5C4 005B8F44  90 7D 02 DC */	stw r3, 0x2dc(r29)
/* 805BD5C8 005B8F48  80 83 00 04 */	lwz r4, 0x4(r3)
/* 805BD5CC 005B8F4C  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD5D0 005B8F50  40 82 00 0C */	bne .L_805BD5DC
/* 805BD5D4 005B8F54  93 A3 00 00 */	stw r29, 0x0(r3)
/* 805BD5D8 005B8F58  48 00 00 08 */	b .L_805BD5E0
.L_805BD5DC:
/* 805BD5DC 005B8F5C  93 A4 02 E0 */	stw r29, 0x2e0(r4)
.L_805BD5E0:
/* 805BD5E0 005B8F60  38 00 00 00 */	li r0, 0x0
/* 805BD5E4 005B8F64  90 9D 02 E4 */	stw r4, 0x2e4(r29)
/* 805BD5E8 005B8F68  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 805BD5EC 005B8F6C  38 60 00 01 */	li r3, 0x1
/* 805BD5F0 005B8F70  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 805BD5F4 005B8F74  93 A4 00 04 */	stw r29, 0x4(r4)
/* 805BD5F8 005B8F78  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 805BD5FC 005B8F7C  80 8D F3 D0 */	lwz r4, RunQueueBits@sda21(r0)
/* 805BD600 005B8F80  20 00 00 1F */	subfic r0, r0, 0x1f
/* 805BD604 005B8F84  7C 60 00 30 */	slw r0, r3, r0
/* 805BD608 005B8F88  7C 80 03 78 */	or r0, r4, r0
/* 805BD60C 005B8F8C  90 0D F3 D0 */	stw r0, RunQueueBits@sda21(r0)
/* 805BD610 005B8F90  90 6D F3 CC */	stw r3, RunQueueHint@sda21(r0)
/* 805BD614 005B8F94  48 00 01 6C */	b .L_805BD780
.L_805BD618:
/* 805BD618 005B8F98  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 805BD61C 005B8F9C  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 805BD620 005B8FA0  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD624 005B8FA4  40 82 00 10 */	bne .L_805BD634
/* 805BD628 005B8FA8  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD62C 005B8FAC  90 A3 00 04 */	stw r5, 0x4(r3)
/* 805BD630 005B8FB0  48 00 00 08 */	b .L_805BD638
.L_805BD634:
/* 805BD634 005B8FB4  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_805BD638:
/* 805BD638 005B8FB8  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD63C 005B8FBC  40 82 00 10 */	bne .L_805BD64C
/* 805BD640 005B8FC0  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD644 005B8FC4  90 83 00 00 */	stw r4, 0x0(r3)
/* 805BD648 005B8FC8  48 00 00 08 */	b .L_805BD650
.L_805BD64C:
/* 805BD64C 005B8FCC  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_805BD650:
/* 805BD650 005B8FD0  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 805BD654 005B8FD4  80 9D 02 F4 */	lwz r4, 0x2f4(r29)
/* 805BD658 005B8FD8  48 00 00 28 */	b .L_805BD680
/* 805BD65C 005B8FDC  60 00 00 00 */	nop
.L_805BD660:
/* 805BD660 005B8FE0  80 64 00 00 */	lwz r3, 0x0(r4)
/* 805BD664 005B8FE4  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD668 005B8FE8  41 82 00 14 */	beq .L_805BD67C
/* 805BD66C 005B8FEC  80 63 02 D0 */	lwz r3, 0x2d0(r3)
/* 805BD670 005B8FF0  7C 03 00 00 */	cmpw r3, r0
/* 805BD674 005B8FF4  40 80 00 08 */	bge .L_805BD67C
/* 805BD678 005B8FF8  7C 60 1B 78 */	mr r0, r3
.L_805BD67C:
/* 805BD67C 005B8FFC  80 84 00 10 */	lwz r4, 0x10(r4)
.L_805BD680:
/* 805BD680 005B9000  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD684 005B9004  40 82 FF DC */	bne .L_805BD660
/* 805BD688 005B9008  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 805BD68C 005B900C  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 805BD690 005B9010  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 805BD694 005B9014  48 00 00 08 */	b .L_805BD69C
.L_805BD698:
/* 805BD698 005B9018  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_805BD69C:
/* 805BD69C 005B901C  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD6A0 005B9020  41 82 00 14 */	beq .L_805BD6B4
/* 805BD6A4 005B9024  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 805BD6A8 005B9028  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 805BD6AC 005B902C  7C 03 00 00 */	cmpw r3, r0
/* 805BD6B0 005B9030  40 81 FF E8 */	ble .L_805BD698
.L_805BD6B4:
/* 805BD6B4 005B9034  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD6B8 005B9038  40 82 00 34 */	bne .L_805BD6EC
/* 805BD6BC 005B903C  80 64 00 04 */	lwz r3, 0x4(r4)
/* 805BD6C0 005B9040  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD6C4 005B9044  40 82 00 0C */	bne .L_805BD6D0
/* 805BD6C8 005B9048  93 A4 00 00 */	stw r29, 0x0(r4)
/* 805BD6CC 005B904C  48 00 00 08 */	b .L_805BD6D4
.L_805BD6D0:
/* 805BD6D0 005B9050  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_805BD6D4:
/* 805BD6D4 005B9054  38 00 00 00 */	li r0, 0x0
/* 805BD6D8 005B9058  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 805BD6DC 005B905C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD6E0 005B9060  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 805BD6E4 005B9064  93 A3 00 04 */	stw r29, 0x4(r3)
/* 805BD6E8 005B9068  48 00 00 2C */	b .L_805BD714
.L_805BD6EC:
/* 805BD6EC 005B906C  90 BD 02 E0 */	stw r5, 0x2e0(r29)
/* 805BD6F0 005B9070  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 805BD6F4 005B9074  93 A5 02 E4 */	stw r29, 0x2e4(r5)
/* 805BD6F8 005B9078  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD6FC 005B907C  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 805BD700 005B9080  40 82 00 10 */	bne .L_805BD710
/* 805BD704 005B9084  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD708 005B9088  93 A3 00 00 */	stw r29, 0x0(r3)
/* 805BD70C 005B908C  48 00 00 08 */	b .L_805BD714
.L_805BD710:
/* 805BD710 005B9090  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_805BD714:
/* 805BD714 005B9094  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 805BD718 005B9098  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD71C 005B909C  41 82 00 64 */	beq .L_805BD780
/* 805BD720 005B90A0  80 63 00 08 */	lwz r3, 0x8(r3)
.L_805BD724:
/* 805BD724 005B90A4  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 805BD728 005B90A8  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD72C 005B90AC  41 81 00 54 */	bgt .L_805BD780
/* 805BD730 005B90B0  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 805BD734 005B90B4  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 805BD738 005B90B8  48 00 00 28 */	b .L_805BD760
/* 805BD73C 005B90BC  60 00 00 00 */	nop
.L_805BD740:
/* 805BD740 005B90C0  80 C5 00 00 */	lwz r6, 0x0(r5)
/* 805BD744 005B90C4  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BD748 005B90C8  41 82 00 14 */	beq .L_805BD75C
/* 805BD74C 005B90CC  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 805BD750 005B90D0  7C 00 20 00 */	cmpw r0, r4
/* 805BD754 005B90D4  40 80 00 08 */	bge .L_805BD75C
/* 805BD758 005B90D8  7C 04 03 78 */	mr r4, r0
.L_805BD75C:
/* 805BD75C 005B90DC  80 A5 00 10 */	lwz r5, 0x10(r5)
.L_805BD760:
/* 805BD760 005B90E0  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD764 005B90E4  40 82 FF DC */	bne .L_805BD740
/* 805BD768 005B90E8  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 805BD76C 005B90EC  7C 00 20 00 */	cmpw r0, r4
/* 805BD770 005B90F0  41 82 00 10 */	beq .L_805BD780
/* 805BD774 005B90F4  4B FF F1 ED */	bl fn_805BC960
/* 805BD778 005B90F8  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD77C 005B90FC  40 82 FF A8 */	bne .L_805BD724
.L_805BD780:
/* 805BD780 005B9100  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BD784 005B9104  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD788 005B9108  41 82 00 0C */	beq .L_805BD794
/* 805BD78C 005B910C  38 60 00 00 */	li r3, 0x0
/* 805BD790 005B9110  4B FF F3 D1 */	bl SelectThread
.L_805BD794:
/* 805BD794 005B9114  7F E3 FB 78 */	mr r3, r31
/* 805BD798 005B9118  4B FF C2 79 */	bl OSRestoreInterrupts
/* 805BD79C 005B911C  7F C3 F3 78 */	mr r3, r30
/* 805BD7A0 005B9120  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 805BD7A4 005B9124  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 805BD7A8 005B9128  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 805BD7AC 005B912C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BD7B0 005B9130  7C 08 03 A6 */	mtlr r0
/* 805BD7B4 005B9134  38 21 00 20 */	addi r1, r1, 0x20
/* 805BD7B8 005B9138  4E 80 00 20 */	blr
.endfn fn_805BD520

.fn gap_03_805BD7BC_text, global
.hidden gap_03_805BD7BC_text
/* 805BD7BC 005B913C  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BD7BC_text

.fn fn_805BD7C0, global
/* 805BD7C0 005B9140  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BD7C4 005B9144  7C 08 02 A6 */	mflr r0
/* 805BD7C8 005B9148  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BD7CC 005B914C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 805BD7D0 005B9150  93 C1 00 18 */	stw r30, 0x18(r1)
/* 805BD7D4 005B9154  93 A1 00 14 */	stw r29, 0x14(r1)
/* 805BD7D8 005B9158  7C 7D 1B 78 */	mr r29, r3
/* 805BD7DC 005B915C  4B FF C1 F5 */	bl OSDisableInterrupts
/* 805BD7E0 005B9160  83 DD 02 CC */	lwz r30, 0x2cc(r29)
/* 805BD7E4 005B9164  7C 7F 1B 78 */	mr r31, r3
/* 805BD7E8 005B9168  2C 1E 00 00 */	cmpwi r30, 0x0
/* 805BD7EC 005B916C  38 1E 00 01 */	addi r0, r30, 0x1
/* 805BD7F0 005B9170  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 805BD7F4 005B9174  40 82 01 30 */	bne .L_805BD924
/* 805BD7F8 005B9178  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 805BD7FC 005B917C  2C 00 00 02 */	cmpwi r0, 0x2
/* 805BD800 005B9180  41 82 00 18 */	beq .L_805BD818
/* 805BD804 005B9184  2C 00 00 01 */	cmpwi r0, 0x1
/* 805BD808 005B9188  41 82 00 20 */	beq .L_805BD828
/* 805BD80C 005B918C  2C 00 00 04 */	cmpwi r0, 0x4
/* 805BD810 005B9190  41 82 00 24 */	beq .L_805BD834
/* 805BD814 005B9194  48 00 00 FC */	b .L_805BD910
.L_805BD818:
/* 805BD818 005B9198  38 00 00 01 */	li r0, 0x1
/* 805BD81C 005B919C  90 0D F3 CC */	stw r0, RunQueueHint@sda21(r0)
/* 805BD820 005B91A0  B0 1D 02 C8 */	sth r0, 0x2c8(r29)
/* 805BD824 005B91A4  48 00 00 EC */	b .L_805BD910
.L_805BD828:
/* 805BD828 005B91A8  7F A3 EB 78 */	mr r3, r29
/* 805BD82C 005B91AC  4B FF F0 85 */	bl fn_805BC8B0
/* 805BD830 005B91B0  48 00 00 E0 */	b .L_805BD910
.L_805BD834:
/* 805BD834 005B91B4  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 805BD838 005B91B8  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 805BD83C 005B91BC  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD840 005B91C0  40 82 00 10 */	bne .L_805BD850
/* 805BD844 005B91C4  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD848 005B91C8  90 A3 00 04 */	stw r5, 0x4(r3)
/* 805BD84C 005B91CC  48 00 00 08 */	b .L_805BD854
.L_805BD850:
/* 805BD850 005B91D0  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_805BD854:
/* 805BD854 005B91D4  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD858 005B91D8  40 82 00 10 */	bne .L_805BD868
/* 805BD85C 005B91DC  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD860 005B91E0  90 83 00 00 */	stw r4, 0x0(r3)
/* 805BD864 005B91E4  48 00 00 08 */	b .L_805BD86C
.L_805BD868:
/* 805BD868 005B91E8  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_805BD86C:
/* 805BD86C 005B91EC  38 00 00 20 */	li r0, 0x20
/* 805BD870 005B91F0  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 805BD874 005B91F4  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD878 005B91F8  80 83 00 04 */	lwz r4, 0x4(r3)
/* 805BD87C 005B91FC  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BD880 005B9200  40 82 00 0C */	bne .L_805BD88C
/* 805BD884 005B9204  93 A3 00 00 */	stw r29, 0x0(r3)
/* 805BD888 005B9208  48 00 00 08 */	b .L_805BD890
.L_805BD88C:
/* 805BD88C 005B920C  93 A4 02 E0 */	stw r29, 0x2e0(r4)
.L_805BD890:
/* 805BD890 005B9210  38 00 00 00 */	li r0, 0x0
/* 805BD894 005B9214  90 9D 02 E4 */	stw r4, 0x2e4(r29)
/* 805BD898 005B9218  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 805BD89C 005B921C  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 805BD8A0 005B9220  93 A3 00 04 */	stw r29, 0x4(r3)
/* 805BD8A4 005B9224  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 805BD8A8 005B9228  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD8AC 005B922C  41 82 00 64 */	beq .L_805BD910
/* 805BD8B0 005B9230  80 63 00 08 */	lwz r3, 0x8(r3)
.L_805BD8B4:
/* 805BD8B4 005B9234  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 805BD8B8 005B9238  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD8BC 005B923C  41 81 00 54 */	bgt .L_805BD910
/* 805BD8C0 005B9240  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 805BD8C4 005B9244  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 805BD8C8 005B9248  48 00 00 28 */	b .L_805BD8F0
/* 805BD8CC 005B924C  60 00 00 00 */	nop
.L_805BD8D0:
/* 805BD8D0 005B9250  80 C5 00 00 */	lwz r6, 0x0(r5)
/* 805BD8D4 005B9254  2C 06 00 00 */	cmpwi r6, 0x0
/* 805BD8D8 005B9258  41 82 00 14 */	beq .L_805BD8EC
/* 805BD8DC 005B925C  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 805BD8E0 005B9260  7C 00 20 00 */	cmpw r0, r4
/* 805BD8E4 005B9264  40 80 00 08 */	bge .L_805BD8EC
/* 805BD8E8 005B9268  7C 04 03 78 */	mr r4, r0
.L_805BD8EC:
/* 805BD8EC 005B926C  80 A5 00 10 */	lwz r5, 0x10(r5)
.L_805BD8F0:
/* 805BD8F0 005B9270  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD8F4 005B9274  40 82 FF DC */	bne .L_805BD8D0
/* 805BD8F8 005B9278  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 805BD8FC 005B927C  7C 00 20 00 */	cmpw r0, r4
/* 805BD900 005B9280  41 82 00 10 */	beq .L_805BD910
/* 805BD904 005B9284  4B FF F0 5D */	bl fn_805BC960
/* 805BD908 005B9288  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD90C 005B928C  40 82 FF A8 */	bne .L_805BD8B4
.L_805BD910:
/* 805BD910 005B9290  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BD914 005B9294  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BD918 005B9298  41 82 00 0C */	beq .L_805BD924
/* 805BD91C 005B929C  38 60 00 00 */	li r3, 0x0
/* 805BD920 005B92A0  4B FF F2 41 */	bl SelectThread
.L_805BD924:
/* 805BD924 005B92A4  7F E3 FB 78 */	mr r3, r31
/* 805BD928 005B92A8  4B FF C0 E9 */	bl OSRestoreInterrupts
/* 805BD92C 005B92AC  7F C3 F3 78 */	mr r3, r30
/* 805BD930 005B92B0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 805BD934 005B92B4  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 805BD938 005B92B8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 805BD93C 005B92BC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BD940 005B92C0  7C 08 03 A6 */	mtlr r0
/* 805BD944 005B92C4  38 21 00 20 */	addi r1, r1, 0x20
/* 805BD948 005B92C8  4E 80 00 20 */	blr
.endfn fn_805BD7C0

.fn gap_03_805BD94C_text, global
.hidden gap_03_805BD94C_text
/* 805BD94C 005B92CC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BD94C_text

.fn OSSleepThread, global
/* 805BD950 005B92D0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BD954 005B92D4  7C 08 02 A6 */	mflr r0
/* 805BD958 005B92D8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BD95C 005B92DC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BD960 005B92E0  93 C1 00 08 */	stw r30, 0x8(r1)
/* 805BD964 005B92E4  7C 7E 1B 78 */	mr r30, r3
/* 805BD968 005B92E8  4B FF C0 69 */	bl OSDisableInterrupts
/* 805BD96C 005B92EC  3C 80 80 00 */	lis r4, 0x8000
/* 805BD970 005B92F0  38 00 00 04 */	li r0, 0x4
/* 805BD974 005B92F4  80 84 00 E4 */	lwz r4, 0xe4(r4)
/* 805BD978 005B92F8  7C 7F 1B 78 */	mr r31, r3
/* 805BD97C 005B92FC  B0 04 02 C8 */	sth r0, 0x2c8(r4)
/* 805BD980 005B9300  93 C4 02 DC */	stw r30, 0x2dc(r4)
/* 805BD984 005B9304  80 BE 00 00 */	lwz r5, 0x0(r30)
/* 805BD988 005B9308  48 00 00 0C */	b .L_805BD994
/* 805BD98C 005B930C  60 00 00 00 */	nop
.L_805BD990:
/* 805BD990 005B9310  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_805BD994:
/* 805BD994 005B9314  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD998 005B9318  41 82 00 14 */	beq .L_805BD9AC
/* 805BD99C 005B931C  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 805BD9A0 005B9320  80 04 02 D0 */	lwz r0, 0x2d0(r4)
/* 805BD9A4 005B9324  7C 03 00 00 */	cmpw r3, r0
/* 805BD9A8 005B9328  40 81 FF E8 */	ble .L_805BD990
.L_805BD9AC:
/* 805BD9AC 005B932C  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BD9B0 005B9330  40 82 00 30 */	bne .L_805BD9E0
/* 805BD9B4 005B9334  80 7E 00 04 */	lwz r3, 0x4(r30)
/* 805BD9B8 005B9338  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD9BC 005B933C  40 82 00 0C */	bne .L_805BD9C8
/* 805BD9C0 005B9340  90 9E 00 00 */	stw r4, 0x0(r30)
/* 805BD9C4 005B9344  48 00 00 08 */	b .L_805BD9CC
.L_805BD9C8:
/* 805BD9C8 005B9348  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_805BD9CC:
/* 805BD9CC 005B934C  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 805BD9D0 005B9350  38 00 00 00 */	li r0, 0x0
/* 805BD9D4 005B9354  90 04 02 E0 */	stw r0, 0x2e0(r4)
/* 805BD9D8 005B9358  90 9E 00 04 */	stw r4, 0x4(r30)
/* 805BD9DC 005B935C  48 00 00 28 */	b .L_805BDA04
.L_805BD9E0:
/* 805BD9E0 005B9360  90 A4 02 E0 */	stw r5, 0x2e0(r4)
/* 805BD9E4 005B9364  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 805BD9E8 005B9368  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 805BD9EC 005B936C  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BD9F0 005B9370  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 805BD9F4 005B9374  40 82 00 0C */	bne .L_805BDA00
/* 805BD9F8 005B9378  90 9E 00 00 */	stw r4, 0x0(r30)
/* 805BD9FC 005B937C  48 00 00 08 */	b .L_805BDA04
.L_805BDA00:
/* 805BDA00 005B9380  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_805BDA04:
/* 805BDA04 005B9384  38 00 00 01 */	li r0, 0x1
/* 805BDA08 005B9388  90 0D F3 CC */	stw r0, RunQueueHint@sda21(r0)
/* 805BDA0C 005B938C  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BDA10 005B9390  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BDA14 005B9394  41 82 00 0C */	beq .L_805BDA20
/* 805BDA18 005B9398  38 60 00 00 */	li r3, 0x0
/* 805BDA1C 005B939C  4B FF F1 45 */	bl SelectThread
.L_805BDA20:
/* 805BDA20 005B93A0  7F E3 FB 78 */	mr r3, r31
/* 805BDA24 005B93A4  4B FF BF ED */	bl OSRestoreInterrupts
/* 805BDA28 005B93A8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BDA2C 005B93AC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BDA30 005B93B0  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 805BDA34 005B93B4  7C 08 03 A6 */	mtlr r0
/* 805BDA38 005B93B8  38 21 00 10 */	addi r1, r1, 0x10
/* 805BDA3C 005B93BC  4E 80 00 20 */	blr
.endfn OSSleepThread

.fn fn_805BDA40, global
/* 805BDA40 005B93C0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BDA44 005B93C4  7C 08 02 A6 */	mflr r0
/* 805BDA48 005B93C8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BDA4C 005B93CC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BDA50 005B93D0  93 C1 00 08 */	stw r30, 0x8(r1)
/* 805BDA54 005B93D4  7C 7E 1B 78 */	mr r30, r3
/* 805BDA58 005B93D8  4B FF BF 79 */	bl OSDisableInterrupts
/* 805BDA5C 005B93DC  3C A0 80 78 */	lis r5, lbl_8077EBF0@ha
/* 805BDA60 005B93E0  7C 7F 1B 78 */	mr r31, r3
/* 805BDA64 005B93E4  38 A5 EB F0 */	addi r5, r5, lbl_8077EBF0@l
/* 805BDA68 005B93E8  38 C0 00 00 */	li r6, 0x0
/* 805BDA6C 005B93EC  38 60 00 01 */	li r3, 0x1
/* 805BDA70 005B93F0  48 00 00 88 */	b .L_805BDAF8
/* 805BDA74 005B93F4  60 00 00 00 */	nop
.L_805BDA78:
/* 805BDA78 005B93F8  80 88 02 E0 */	lwz r4, 0x2e0(r8)
/* 805BDA7C 005B93FC  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BDA80 005B9400  40 82 00 0C */	bne .L_805BDA8C
/* 805BDA84 005B9404  90 DE 00 04 */	stw r6, 0x4(r30)
/* 805BDA88 005B9408  48 00 00 08 */	b .L_805BDA90
.L_805BDA8C:
/* 805BDA8C 005B940C  90 C4 02 E4 */	stw r6, 0x2e4(r4)
.L_805BDA90:
/* 805BDA90 005B9410  90 9E 00 00 */	stw r4, 0x0(r30)
/* 805BDA94 005B9414  B0 68 02 C8 */	sth r3, 0x2c8(r8)
/* 805BDA98 005B9418  80 08 02 CC */	lwz r0, 0x2cc(r8)
/* 805BDA9C 005B941C  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BDAA0 005B9420  41 81 00 58 */	bgt .L_805BDAF8
/* 805BDAA4 005B9424  80 08 02 D0 */	lwz r0, 0x2d0(r8)
/* 805BDAA8 005B9428  54 00 18 38 */	slwi r0, r0, 3
/* 805BDAAC 005B942C  7C 85 02 14 */	add r4, r5, r0
/* 805BDAB0 005B9430  90 88 02 DC */	stw r4, 0x2dc(r8)
/* 805BDAB4 005B9434  80 E4 00 04 */	lwz r7, 0x4(r4)
/* 805BDAB8 005B9438  2C 07 00 00 */	cmpwi r7, 0x0
/* 805BDABC 005B943C  40 82 00 0C */	bne .L_805BDAC8
/* 805BDAC0 005B9440  91 04 00 00 */	stw r8, 0x0(r4)
/* 805BDAC4 005B9444  48 00 00 08 */	b .L_805BDACC
.L_805BDAC8:
/* 805BDAC8 005B9448  91 07 02 E0 */	stw r8, 0x2e0(r7)
.L_805BDACC:
/* 805BDACC 005B944C  90 E8 02 E4 */	stw r7, 0x2e4(r8)
/* 805BDAD0 005B9450  90 C8 02 E0 */	stw r6, 0x2e0(r8)
/* 805BDAD4 005B9454  80 88 02 DC */	lwz r4, 0x2dc(r8)
/* 805BDAD8 005B9458  91 04 00 04 */	stw r8, 0x4(r4)
/* 805BDADC 005B945C  80 08 02 D0 */	lwz r0, 0x2d0(r8)
/* 805BDAE0 005B9460  80 8D F3 D0 */	lwz r4, RunQueueBits@sda21(r0)
/* 805BDAE4 005B9464  20 00 00 1F */	subfic r0, r0, 0x1f
/* 805BDAE8 005B9468  7C 60 00 30 */	slw r0, r3, r0
/* 805BDAEC 005B946C  7C 80 03 78 */	or r0, r4, r0
/* 805BDAF0 005B9470  90 0D F3 D0 */	stw r0, RunQueueBits@sda21(r0)
/* 805BDAF4 005B9474  90 6D F3 CC */	stw r3, RunQueueHint@sda21(r0)
.L_805BDAF8:
/* 805BDAF8 005B9478  81 1E 00 00 */	lwz r8, 0x0(r30)
/* 805BDAFC 005B947C  2C 08 00 00 */	cmpwi r8, 0x0
/* 805BDB00 005B9480  40 82 FF 78 */	bne .L_805BDA78
/* 805BDB04 005B9484  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BDB08 005B9488  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BDB0C 005B948C  41 82 00 0C */	beq .L_805BDB18
/* 805BDB10 005B9490  38 60 00 00 */	li r3, 0x0
/* 805BDB14 005B9494  4B FF F0 4D */	bl SelectThread
.L_805BDB18:
/* 805BDB18 005B9498  7F E3 FB 78 */	mr r3, r31
/* 805BDB1C 005B949C  4B FF BE F5 */	bl OSRestoreInterrupts
/* 805BDB20 005B94A0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BDB24 005B94A4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BDB28 005B94A8  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 805BDB2C 005B94AC  7C 08 03 A6 */	mtlr r0
/* 805BDB30 005B94B0  38 21 00 10 */	addi r1, r1, 0x10
/* 805BDB34 005B94B4  4E 80 00 20 */	blr
.endfn fn_805BDA40

.fn gap_03_805BDB38_text, global
.hidden gap_03_805BDB38_text
/* 805BDB38 005B94B8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BDB3C 005B94BC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BDB38_text

.fn fn_805BDB40, global
/* 805BDB40 005B94C0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 805BDB44 005B94C4  7C 08 02 A6 */	mflr r0
/* 805BDB48 005B94C8  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BDB4C 005B94CC  90 01 00 24 */	stw r0, 0x24(r1)
/* 805BDB50 005B94D0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 805BDB54 005B94D4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 805BDB58 005B94D8  7C 9E 23 78 */	mr r30, r4
/* 805BDB5C 005B94DC  93 A1 00 14 */	stw r29, 0x14(r1)
/* 805BDB60 005B94E0  7C 7D 1B 78 */	mr r29, r3
/* 805BDB64 005B94E4  41 80 00 0C */	blt .L_805BDB70
/* 805BDB68 005B94E8  2C 04 00 1F */	cmpwi r4, 0x1f
/* 805BDB6C 005B94EC  40 81 00 0C */	ble .L_805BDB78
.L_805BDB70:
/* 805BDB70 005B94F0  38 60 00 00 */	li r3, 0x0
/* 805BDB74 005B94F4  48 00 00 9C */	b .L_805BDC10
.L_805BDB78:
/* 805BDB78 005B94F8  4B FF BE 59 */	bl OSDisableInterrupts
/* 805BDB7C 005B94FC  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 805BDB80 005B9500  7C 7F 1B 78 */	mr r31, r3
/* 805BDB84 005B9504  7C 00 F0 00 */	cmpw r0, r30
/* 805BDB88 005B9508  41 82 00 7C */	beq .L_805BDC04
/* 805BDB8C 005B950C  93 DD 02 D4 */	stw r30, 0x2d4(r29)
.L_805BDB90:
/* 805BDB90 005B9510  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 805BDB94 005B9514  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BDB98 005B9518  41 81 00 58 */	bgt .L_805BDBF0
/* 805BDB9C 005B951C  80 9D 02 D4 */	lwz r4, 0x2d4(r29)
/* 805BDBA0 005B9520  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 805BDBA4 005B9524  48 00 00 24 */	b .L_805BDBC8
.L_805BDBA8:
/* 805BDBA8 005B9528  80 A3 00 00 */	lwz r5, 0x0(r3)
/* 805BDBAC 005B952C  2C 05 00 00 */	cmpwi r5, 0x0
/* 805BDBB0 005B9530  41 82 00 14 */	beq .L_805BDBC4
/* 805BDBB4 005B9534  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 805BDBB8 005B9538  7C 00 20 00 */	cmpw r0, r4
/* 805BDBBC 005B953C  40 80 00 08 */	bge .L_805BDBC4
/* 805BDBC0 005B9540  7C 04 03 78 */	mr r4, r0
.L_805BDBC4:
/* 805BDBC4 005B9544  80 63 00 10 */	lwz r3, 0x10(r3)
.L_805BDBC8:
/* 805BDBC8 005B9548  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BDBCC 005B954C  40 82 FF DC */	bne .L_805BDBA8
/* 805BDBD0 005B9550  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 805BDBD4 005B9554  7C 00 20 00 */	cmpw r0, r4
/* 805BDBD8 005B9558  41 82 00 18 */	beq .L_805BDBF0
/* 805BDBDC 005B955C  7F A3 EB 78 */	mr r3, r29
/* 805BDBE0 005B9560  4B FF ED 81 */	bl fn_805BC960
/* 805BDBE4 005B9564  2C 03 00 00 */	cmpwi r3, 0x0
/* 805BDBE8 005B9568  7C 7D 1B 78 */	mr r29, r3
/* 805BDBEC 005B956C  40 82 FF A4 */	bne .L_805BDB90
.L_805BDBF0:
/* 805BDBF0 005B9570  80 0D F3 CC */	lwz r0, RunQueueHint@sda21(r0)
/* 805BDBF4 005B9574  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BDBF8 005B9578  41 82 00 0C */	beq .L_805BDC04
/* 805BDBFC 005B957C  38 60 00 00 */	li r3, 0x0
/* 805BDC00 005B9580  4B FF EF 61 */	bl SelectThread
.L_805BDC04:
/* 805BDC04 005B9584  7F E3 FB 78 */	mr r3, r31
/* 805BDC08 005B9588  4B FF BE 09 */	bl OSRestoreInterrupts
/* 805BDC0C 005B958C  38 60 00 01 */	li r3, 0x1
.L_805BDC10:
/* 805BDC10 005B9590  80 01 00 24 */	lwz r0, 0x24(r1)
/* 805BDC14 005B9594  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 805BDC18 005B9598  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 805BDC1C 005B959C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 805BDC20 005B95A0  7C 08 03 A6 */	mtlr r0
/* 805BDC24 005B95A4  38 21 00 20 */	addi r1, r1, 0x20
/* 805BDC28 005B95A8  4E 80 00 20 */	blr
.endfn fn_805BDB40

.fn gap_03_805BDC2C_text, global
.hidden gap_03_805BDC2C_text
/* 805BDC2C 005B95AC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BDC2C_text

.fn fn_805BDC30, global
/* 805BDC30 005B95B0  80 63 02 D4 */	lwz r3, 0x2d4(r3)
/* 805BDC34 005B95B4  4E 80 00 20 */	blr
.endfn fn_805BDC30

.fn gap_03_805BDC38_text, global
.hidden gap_03_805BDC38_text
/* 805BDC38 005B95B8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BDC3C 005B95BC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BDC38_text

.fn fn_805BDC40, global
/* 805BDC40 005B95C0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 805BDC44 005B95C4  7C 08 02 A6 */	mflr r0
/* 805BDC48 005B95C8  90 01 00 14 */	stw r0, 0x14(r1)
/* 805BDC4C 005B95CC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 805BDC50 005B95D0  7C 7F 1B 78 */	mr r31, r3
/* 805BDC54 005B95D4  4B FF 6D ED */	bl fn_805B4A40
/* 805BDC58 005B95D8  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 805BDC5C 005B95DC  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BDC60 005B95E0  40 82 00 0C */	bne .L_805BDC6C
/* 805BDC64 005B95E4  38 00 00 00 */	li r0, 0x0
/* 805BDC68 005B95E8  48 00 00 30 */	b .L_805BDC98
.L_805BDC6C:
/* 805BDC6C 005B95EC  3C 80 80 00 */	lis r4, 0x8000
/* 805BDC70 005B95F0  80 84 00 DC */	lwz r4, 0xdc(r4)
/* 805BDC74 005B95F4  48 00 00 18 */	b .L_805BDC8C
.L_805BDC78:
/* 805BDC78 005B95F8  7C 03 20 40 */	cmplw r3, r4
/* 805BDC7C 005B95FC  40 82 00 0C */	bne .L_805BDC88
/* 805BDC80 005B9600  38 00 00 01 */	li r0, 0x1
/* 805BDC84 005B9604  48 00 00 14 */	b .L_805BDC98
.L_805BDC88:
/* 805BDC88 005B9608  80 84 02 FC */	lwz r4, 0x2fc(r4)
.L_805BDC8C:
/* 805BDC8C 005B960C  2C 04 00 00 */	cmpwi r4, 0x0
/* 805BDC90 005B9610  40 82 FF E8 */	bne .L_805BDC78
/* 805BDC94 005B9614  38 00 00 00 */	li r0, 0x0
.L_805BDC98:
/* 805BDC98 005B9618  2C 00 00 00 */	cmpwi r0, 0x0
/* 805BDC9C 005B961C  41 82 00 10 */	beq .L_805BDCAC
/* 805BDCA0 005B9620  7F E3 FB 78 */	mr r3, r31
/* 805BDCA4 005B9624  4B FF 6D 9D */	bl fn_805B4A40
/* 805BDCA8 005B9628  4B FF F8 79 */	bl fn_805BD520
.L_805BDCAC:
/* 805BDCAC 005B962C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 805BDCB0 005B9630  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 805BDCB4 005B9634  7C 08 03 A6 */	mtlr r0
/* 805BDCB8 005B9638  38 21 00 10 */	addi r1, r1, 0x10
/* 805BDCBC 005B963C  4E 80 00 20 */	blr
.endfn fn_805BDC40

.fn fn_805BDCC0, global
/* 805BDCC0 005B9640  94 21 FF B0 */	stwu r1, -0x50(r1)
/* 805BDCC4 005B9644  7C 08 02 A6 */	mflr r0
/* 805BDCC8 005B9648  90 01 00 54 */	stw r0, 0x54(r1)
/* 805BDCCC 005B964C  93 E1 00 4C */	stw r31, 0x4c(r1)
/* 805BDCD0 005B9650  93 C1 00 48 */	stw r30, 0x48(r1)
/* 805BDCD4 005B9654  93 A1 00 44 */	stw r29, 0x44(r1)
/* 805BDCD8 005B9658  7C 7D 1B 78 */	mr r29, r3
/* 805BDCDC 005B965C  93 81 00 40 */	stw r28, 0x40(r1)
/* 805BDCE0 005B9660  7C 9C 23 78 */	mr r28, r4
/* 805BDCE4 005B9664  4B FF BC ED */	bl OSDisableInterrupts
/* 805BDCE8 005B9668  3C 80 80 00 */	lis r4, 0x8000
/* 805BDCEC 005B966C  7C 7E 1B 78 */	mr r30, r3
/* 805BDCF0 005B9670  83 E4 00 E4 */	lwz r31, 0xe4(r4)
/* 805BDCF4 005B9674  2C 1F 00 00 */	cmpwi r31, 0x0
/* 805BDCF8 005B9678  40 82 00 0C */	bne .L_805BDD04
/* 805BDCFC 005B967C  4B FF BD 15 */	bl OSRestoreInterrupts
/* 805BDD00 005B9680  48 00 00 48 */	b .L_805BDD48
.L_805BDD04:
/* 805BDD04 005B9684  38 61 00 08 */	addi r3, r1, 0x8
/* 805BDD08 005B9688  4B FF 64 E9 */	bl OSCreateAlarm
/* 805BDD0C 005B968C  7F E4 FB 78 */	mr r4, r31
/* 805BDD10 005B9690  38 61 00 08 */	addi r3, r1, 0x8
/* 805BDD14 005B9694  4B FF 6D 3D */	bl fn_805B4A50
/* 805BDD18 005B9698  3C E0 80 5C */	lis r7, fn_805BDC40@ha
/* 805BDD1C 005B969C  7F 86 E3 78 */	mr r6, r28
/* 805BDD20 005B96A0  7F A5 EB 78 */	mr r5, r29
/* 805BDD24 005B96A4  38 61 00 08 */	addi r3, r1, 0x8
/* 805BDD28 005B96A8  38 E7 DC 40 */	addi r7, r7, fn_805BDC40@l
/* 805BDD2C 005B96AC  4B FF 67 25 */	bl OSSetAlarm
/* 805BDD30 005B96B0  7F E3 FB 78 */	mr r3, r31
/* 805BDD34 005B96B4  4B FF FA 8D */	bl fn_805BD7C0
/* 805BDD38 005B96B8  38 61 00 08 */	addi r3, r1, 0x8
/* 805BDD3C 005B96BC  4B FF 68 15 */	bl fn_805B4550
/* 805BDD40 005B96C0  7F C3 F3 78 */	mr r3, r30
/* 805BDD44 005B96C4  4B FF BC CD */	bl OSRestoreInterrupts
.L_805BDD48:
/* 805BDD48 005B96C8  80 01 00 54 */	lwz r0, 0x54(r1)
/* 805BDD4C 005B96CC  83 E1 00 4C */	lwz r31, 0x4c(r1)
/* 805BDD50 005B96D0  83 C1 00 48 */	lwz r30, 0x48(r1)
/* 805BDD54 005B96D4  83 A1 00 44 */	lwz r29, 0x44(r1)
/* 805BDD58 005B96D8  83 81 00 40 */	lwz r28, 0x40(r1)
/* 805BDD5C 005B96DC  7C 08 03 A6 */	mtlr r0
/* 805BDD60 005B96E0  38 21 00 50 */	addi r1, r1, 0x50
/* 805BDD64 005B96E4  4E 80 00 20 */	blr
.endfn fn_805BDCC0

.fn gap_03_805BDD68_text, global
.hidden gap_03_805BDD68_text
/* 805BDD68 005B96E8  00 00 00 00 */	.4byte 0x00000000 /* invalid */
/* 805BDD6C 005B96EC  00 00 00 00 */	.4byte 0x00000000 /* invalid */
.endfn gap_03_805BDD68_text

# 0x8077E8D8 - 0x8077F300
.section .bss, "wa", @nobits
.balign 8

.obj DefaultThread, local
	.skip 0x318
.endobj DefaultThread

.obj lbl_8077EBF0, global
	.skip 0x100
.endobj lbl_8077EBF0

.obj lbl_8077ECF0, global
	.skip 0x5F0
.endobj lbl_8077ECF0

.obj StmEhInBuf_8077F2E0, global
	.skip 0x20
.endobj StmEhInBuf_8077F2E0

# 0x807D0990 - 0x807D0998
.section .sdata, "wa"
.balign 8

.obj SwitchThreadCallback, local
	.4byte fn_805BC520
.endobj SwitchThreadCallback

.obj gap_09_807D0994_sdata, global
.hidden gap_09_807D0994_sdata
	.4byte 0x00000000
.endobj gap_09_807D0994_sdata

# 0x807D66E8 - 0x807D66F8
.section .sbss, "wa", @nobits
.balign 8

.obj Reschedule, local
	.skip 0x4
.endobj Reschedule

.obj RunQueueHint, local
	.skip 0x4
.endobj RunQueueHint

.obj RunQueueBits, local
	.skip 0x4
.endobj RunQueueBits

.obj gap_10_807D66F4_sbss, global
.hidden gap_10_807D66F4_sbss
	.skip 0x4
.endobj gap_10_807D66F4_sbss
